// <auto-generated />
using System;
using DilekYildizimSensin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DilekYildizimSensin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241124220450_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e"),
                            ConcurrencyStamp = "a61070c9-7f82-4c02-b675-3f760f8b0465",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4"),
                            ConcurrencyStamp = "5964823b-111a-4f37-bd96-5c2b0f32aa95",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb"),
                            ConcurrencyStamp = "2d0d5da6-b52a-4bb9-8060-675424998336",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "3a46267e-6aa5-4e06-8782-7085402dde0f",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/024/183/525/non_2x/avatar-of-a-man-portrait-of-a-young-guy-illustration-of-male-character-in-modern-color-style-vector.jpg",
                            LastName = "Bey",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDiOimDmXShE+zvW3VMREiCvUuYZFfU1poi41jWYkkp9cIAq9uyEvhbcp5HZ1T1x6w==",
                            PhoneNumber = "+905439999999",
                            PhoneNumberConfirmed = true,
                            Score = 520,
                            SecurityStamp = "a28208e1-6d7c-4022-94d1-1ef467a48055",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "97cbc730-ab8a-4092-b127-de9eec4eeec9",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://img.freepik.com/premium-photo/graphic-designer-digital-avatar-generative-ai_934475-9292.jpg",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEO9+WE9JJAeZVumaZBXzj6+/yGuxaxqlkwe/G9ghoBfxkI0tQ8fyjlvxPbLDISkcVw==",
                            PhoneNumber = "+905439999988",
                            PhoneNumberConfirmed = false,
                            Score = 123,
                            SecurityStamp = "31043d6e-91b3-4562-8709-06af506455a9",
                            TwoFactorEnabled = false,
                            UserName = "umutyasar"
                        },
                        new
                        {
                            Id = new Guid("e0b6e331-7b6d-4136-9999-e838f4fbdaac"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "9625cc35-58e3-4676-aeb2-fbf0918702a7",
                            Email = "ruken.yavuz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruken",
                            Gender = 1,
                            ImageUrl = "image1",
                            LastName = "Yavuz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUKENYAVUZ@GMAIL.COM",
                            NormalizedUserName = "RUKENYAVUZ@GMAIL.COM",
                            PhoneNumber = "+905439999901",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "96daa1f0-5837-4b5f-b131-84e4f1d1aff0",
                            TwoFactorEnabled = false,
                            UserName = "Ruken Yavuz"
                        },
                        new
                        {
                            Id = new Guid("1f670144-4fe2-41e0-b1f9-08c57f236d12"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "d85904ad-addc-4a63-b839-e449e8e113e1",
                            Email = "cem.aksu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cem",
                            Gender = 2,
                            ImageUrl = "image2",
                            LastName = "Aksu",
                            LockoutEnabled = false,
                            NormalizedEmail = "CEMAKSU@GMAIL.COM",
                            NormalizedUserName = "CEMAKSU@GMAIL.COM",
                            PhoneNumber = "+905439999902",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "b0a99837-733b-4453-9cbe-125129c6ec64",
                            TwoFactorEnabled = false,
                            UserName = "Cem Aksu"
                        },
                        new
                        {
                            Id = new Guid("849745c9-6502-42c6-83d9-e01503087ce7"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "545f34b3-75b6-4189-af5a-07317880675f",
                            Email = "irem.keles@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İrem",
                            Gender = 1,
                            ImageUrl = "image3",
                            LastName = "Keleş",
                            LockoutEnabled = false,
                            NormalizedEmail = "IREMKELES@GMAIL.COM",
                            NormalizedUserName = "IREMKELES@GMAIL.COM",
                            PhoneNumber = "+905439999903",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "16282c61-bb25-49a6-b3fb-59a9b440a968",
                            TwoFactorEnabled = false,
                            UserName = "İrem Keleş"
                        },
                        new
                        {
                            Id = new Guid("6b826486-0d5e-4677-9047-29fcd921f4b6"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "659ad8ae-be4d-4d0d-a98b-19d5d15a6900",
                            Email = "hazal.serkaya@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hazal",
                            Gender = 1,
                            ImageUrl = "image4",
                            LastName = "Serkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "HAZALSERKAYA@GMAIL.COM",
                            NormalizedUserName = "HAZALSERKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999904",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "27eecfb2-7ef0-4108-8d4e-c86ef534dec4",
                            TwoFactorEnabled = false,
                            UserName = "Hazal Serkaya"
                        },
                        new
                        {
                            Id = new Guid("a93fcf02-abb6-424a-81bf-7d4ea1f51230"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "8c635889-7254-42c7-ba6b-052d18264450",
                            Email = "zeynep.sena.celik@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zeynep Sena",
                            Gender = 1,
                            ImageUrl = "image5",
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZEYNEPSENACELIK@GMAIL.COM",
                            NormalizedUserName = "ZEYNEPSENACELIK@GMAIL.COM",
                            PhoneNumber = "+905439999905",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "e5b13bcc-b7e4-4c56-ac83-733588f2431b",
                            TwoFactorEnabled = false,
                            UserName = "Zeynep Sena Çelik"
                        },
                        new
                        {
                            Id = new Guid("45af5a4b-9130-4a13-8d64-f77a4a448db6"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "d170ac74-4ec7-469d-9029-881fa2f4009c",
                            Email = "ali.ozdemir@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 2,
                            ImageUrl = "image6",
                            LastName = "Özdemir",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALIÖZDEMIR@GMAIL.COM",
                            NormalizedUserName = "ALIÖZDEMIR@GMAIL.COM",
                            PhoneNumber = "+905439999906",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "71c5c3d2-6e08-4962-b53d-166c839e376f",
                            TwoFactorEnabled = false,
                            UserName = "Ali Özdemir"
                        },
                        new
                        {
                            Id = new Guid("a4dcd042-a5c7-495c-9efb-fc9dcef52a38"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "373f6f6c-b538-497a-969b-c981e88c172a",
                            Email = "erhan.zorlu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Erhan",
                            Gender = 2,
                            ImageUrl = "image7",
                            LastName = "Zorlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERHANZORLU@GMAIL.COM",
                            NormalizedUserName = "ERHANZORLU@GMAIL.COM",
                            PhoneNumber = "+905439999907",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ac6ef185-1c0e-4915-8f49-4e24a92cd5a3",
                            TwoFactorEnabled = false,
                            UserName = "Erhan Zorlu"
                        },
                        new
                        {
                            Id = new Guid("0ebd4e19-b9ae-427f-9da9-9e596b51dba1"),
                            AccessFailedCount = 0,
                            Age = 21,
                            ConcurrencyStamp = "c8766509-be36-47d6-aa91-b7fb20e96f35",
                            Email = "yagmur.ay@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yağmur",
                            Gender = 1,
                            ImageUrl = "image8",
                            LastName = "Ay",
                            LockoutEnabled = false,
                            NormalizedEmail = "YAĞMURAY@GMAIL.COM",
                            NormalizedUserName = "YAĞMURAY@GMAIL.COM",
                            PhoneNumber = "+905439999908",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "9dc7dcaf-10da-489e-be27-7ff46984a121",
                            TwoFactorEnabled = false,
                            UserName = "Yağmur Ay"
                        },
                        new
                        {
                            Id = new Guid("3ec39a24-aeb2-4b25-a3d8-1ef22d7596ba"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "08c9c077-15be-42ea-8dce-e9b2f7572fd2",
                            Email = "nora.ipekci@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nora",
                            Gender = 1,
                            ImageUrl = "image9",
                            LastName = "İpekçi",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORAİPEKÇİ@GMAIL.COM",
                            NormalizedUserName = "NORAİPEKÇİ@GMAIL.COM",
                            PhoneNumber = "+905439999909",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ee30e737-1361-4627-9585-004cad013f9e",
                            TwoFactorEnabled = false,
                            UserName = "Nora İpekçi"
                        },
                        new
                        {
                            Id = new Guid("74d3affe-7ebf-44d9-9b4f-cc97553831a0"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "77d55a7e-fc00-4d0e-ae91-2495a2b7ded0",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image10",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEÖZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEÖZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999910",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "a2d309b8-73da-4735-b7e5-fef9ad6e16b3",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("a4d04fd8-7b8f-4220-bf72-60aa7f09a547"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "54bdd17a-fef7-4841-b4c3-01045a915914",
                            Email = "alper.goksel.yilmaz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alper Göksel",
                            Gender = 2,
                            ImageUrl = "image11",
                            LastName = "Yılmaz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            NormalizedUserName = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            PhoneNumber = "+905439999911",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "7ebf39b4-5a83-4a71-9f40-c176efc2b260",
                            TwoFactorEnabled = false,
                            UserName = "Alper Göksel Yılmaz"
                        },
                        new
                        {
                            Id = new Guid("19bcb5f7-f0a9-4afc-a7dc-84b0318ffe94"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "0356e0aa-ae9a-4389-920d-cb5b936b5e96",
                            Email = "saliha.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Saliha",
                            Gender = 1,
                            ImageUrl = "image12",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALIHACANIGUR@GMAIL.COM",
                            NormalizedUserName = "SALIHACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999912",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "5df52349-ac70-4ad2-a51a-4a7e03ca23f1",
                            TwoFactorEnabled = false,
                            UserName = "Saliha Canıgür"
                        },
                        new
                        {
                            Id = new Guid("94c9b109-deb4-471e-b6ff-65d2d5e980da"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "cc54ef70-5a87-480a-a419-936b362ced2a",
                            Email = "huseyin.adas@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hüseyin",
                            Gender = 2,
                            ImageUrl = "image13",
                            LastName = "Adaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUSEYINADAS@GMAIL.COM",
                            NormalizedUserName = "HUSEYINADAS@GMAIL.COM",
                            PhoneNumber = "+905439999913",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "f4402d98-f6b5-4ae3-b625-dfe0a5a5220e",
                            TwoFactorEnabled = false,
                            UserName = "Hüseyin Adaş"
                        },
                        new
                        {
                            Id = new Guid("65b51ce5-cbe6-4032-abdd-48f52f590a87"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "22e74a40-ca91-4ecf-b76c-815a7b62046b",
                            Email = "ferit.erden@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ferit",
                            Gender = 2,
                            ImageUrl = "image14",
                            LastName = "Erden",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERITERDEN@GMAIL.COM",
                            NormalizedUserName = "FERITERDEN@GMAIL.COM",
                            PhoneNumber = "+905439999914",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "a243838d-b043-4cec-bd96-dd9c64785aeb",
                            TwoFactorEnabled = false,
                            UserName = "Ferit Erden"
                        },
                        new
                        {
                            Id = new Guid("6150eeb3-6e48-4d3a-8498-d9cb9227cf82"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "450c3469-2dd3-48dd-9e3b-477ae5a7dd2e",
                            Email = "nergis@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image15",
                            LastName = "Gül",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGIS@GMAIL.COM",
                            NormalizedUserName = "NERGIS@GMAIL.COM",
                            PhoneNumber = "+905439999915",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "2829b8ba-c057-48c0-94e8-b14f93d52d03",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Gül"
                        },
                        new
                        {
                            Id = new Guid("e8f88afd-2af4-4663-927e-bbf95e60d384"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "a88b8c2e-34ef-4335-9688-fdfbd1b67d81",
                            Email = "ilayda.celebi@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "İlayda",
                            Gender = 1,
                            ImageUrl = "image16",
                            LastName = "Çelebi",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILAYDACELEBI@GMAIL.COM",
                            NormalizedUserName = "ILAYDACELEBI@GMAIL.COM",
                            PhoneNumber = "+905439999916",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "b8d73203-6083-4105-abfd-dd906ca10a29",
                            TwoFactorEnabled = false,
                            UserName = "İlayda Çelebi"
                        },
                        new
                        {
                            Id = new Guid("939ee55c-fc2e-4933-8962-6c3bb304bf85"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "abf24ecd-180d-4059-b357-f4618a8494ec",
                            Email = "gokhan.sahin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gökhan",
                            Gender = 2,
                            ImageUrl = "image17",
                            LastName = "Şahin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKHANSHAHIN@GMAIL.COM",
                            NormalizedUserName = "GOKHANSHAHIN@GMAIL.COM",
                            PhoneNumber = "+905439999917",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "bd2c3217-b311-4a59-b09b-18ff4b122897",
                            TwoFactorEnabled = false,
                            UserName = "Gökhan Şahin"
                        },
                        new
                        {
                            Id = new Guid("7bdf942e-1fb7-43eb-9f7c-3e7406b0fada"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "23fca892-6992-4d96-923e-07ab12023333",
                            Email = "ozge.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Özge",
                            Gender = 1,
                            ImageUrl = "image18",
                            LastName = "Akar",
                            LockoutEnabled = false,
                            NormalizedEmail = "OZGEAKAR@GMAIL.COM",
                            NormalizedUserName = "OZGEAKAR@GMAIL.COM",
                            PhoneNumber = "+905439999918",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "6b315082-aaab-454c-9aae-ea28a76267c6",
                            TwoFactorEnabled = false,
                            UserName = "Özge Akar"
                        },
                        new
                        {
                            Id = new Guid("e9bf81e4-d8ab-464c-9252-27d784cd7dae"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "ebbe9e2e-8982-46c6-9295-86e67e621202",
                            Email = "ipek.gurdamar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İpek",
                            Gender = 1,
                            ImageUrl = "image19",
                            LastName = "Gürdamar",
                            LockoutEnabled = false,
                            NormalizedEmail = "IPEKGURDAMAR@GMAIL.COM",
                            NormalizedUserName = "IPEKGURDAMAR@GMAIL.COM",
                            PhoneNumber = "+905439999919",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "94f47b6e-3cee-4db7-ad6b-2d4292486ff5",
                            TwoFactorEnabled = false,
                            UserName = "İpek Gürdamar"
                        },
                        new
                        {
                            Id = new Guid("9957b612-0b43-4ab5-a399-32f49c66d876"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "020f8c69-188c-4a9f-9f6f-ecfdb834859d",
                            Email = "melisa.ertan@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melisa",
                            Gender = 1,
                            ImageUrl = "image20",
                            LastName = "Ertan",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELISAERTAN@GMAIL.COM",
                            NormalizedUserName = "MELISAERTAN@GMAIL.COM",
                            PhoneNumber = "+905439999920",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "f5dfb12e-8c8d-4445-a1a0-c590626b4511",
                            TwoFactorEnabled = false,
                            UserName = "Melisa Ertan"
                        },
                        new
                        {
                            Id = new Guid("d90fdf18-0380-4b05-aca4-e13fa3b25b69"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "eaa09efa-f104-413e-99a8-710fdd77e2f5",
                            Email = "armagan.yagci@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Armağan",
                            Gender = 2,
                            ImageUrl = "image21",
                            LastName = "Yağcı",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARMAGANYAGCI@GMAIL.COM",
                            NormalizedUserName = "ARMAGANYAGCI@GMAIL.COM",
                            PhoneNumber = "+905439999921",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ae218b0c-8958-443a-9213-b82316f89c96",
                            TwoFactorEnabled = false,
                            UserName = "Armağan Yağcı"
                        },
                        new
                        {
                            Id = new Guid("ca728bbe-06d9-4348-896a-f1ce1f4a4426"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "102b6b11-673d-460b-8df7-db7ec117f222",
                            Email = "filiz.cetin.narsap@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Filiz",
                            Gender = 1,
                            ImageUrl = "image22",
                            LastName = "Çetin Narşap",
                            LockoutEnabled = false,
                            NormalizedEmail = "FILIZCETINNARSAP@GMAIL.COM",
                            NormalizedUserName = "FILIZCETINNARSAP@GMAIL.COM",
                            PhoneNumber = "+905439999922",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "49f73c3b-903e-4f97-a572-e6a51e164cb6",
                            TwoFactorEnabled = false,
                            UserName = "Filiz Çetin Narşap"
                        },
                        new
                        {
                            Id = new Guid("6ff336d8-d9a1-4ab2-9a53-4dcf16ef3501"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "20d43f67-67e9-4bfe-8d0a-579f502ede45",
                            Email = "hande.eren@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hande",
                            Gender = 1,
                            ImageUrl = "image23",
                            LastName = "Eren",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANDEREN@GMAIL.COM",
                            NormalizedUserName = "HANDEREN@GMAIL.COM",
                            PhoneNumber = "+905439999923",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "2bdc954b-9fde-4171-9fe4-eafa0f6f7aed",
                            TwoFactorEnabled = false,
                            UserName = "Hande Eren"
                        },
                        new
                        {
                            Id = new Guid("49e82f4a-07fe-4e7a-bed7-301120608ab5"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "b6f5a16f-8b02-41df-a26e-5f4d490ead85",
                            Email = "nergis.aktas@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image24",
                            LastName = "Aktaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGISAKTAS@GMAIL.COM",
                            NormalizedUserName = "NERGISAKTAS@GMAIL.COM",
                            PhoneNumber = "+905439999924",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "4c8780f6-679a-44f6-b5ad-46a8abe10e83",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Aktaş"
                        },
                        new
                        {
                            Id = new Guid("582e6492-05a7-4d74-ab66-c62bf3707343"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "828be24b-d332-4a74-8f54-cf4d227dcde4",
                            Email = "gunsu.berber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Günsu",
                            Gender = 1,
                            ImageUrl = "image25",
                            LastName = "Berber",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUNSUBERBER@GMAIL.COM",
                            NormalizedUserName = "GUNSUBERBER@GMAIL.COM",
                            PhoneNumber = "+905439999925",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "e2161567-dc36-4181-83c5-327ce9f1a5aa",
                            TwoFactorEnabled = false,
                            UserName = "Günsu Berber"
                        },
                        new
                        {
                            Id = new Guid("11a9b59d-dc02-49a9-aa6a-2091367ca508"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "97b91c5a-5fc4-4831-b582-2e0edb05de65",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image26",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEOZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEOZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999926",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "6d1a384b-ebbd-439d-9b83-fb17c2e7057f",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("5697e24a-c74e-4ae4-b42f-f3dd94026c97"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "c43d1187-e0e2-49b8-ba82-ddd0ebf0ca22",
                            Email = "yasemin.kocaman@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Yasemin",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Kocaman",
                            LockoutEnabled = false,
                            NormalizedEmail = "YASEMINKOCAMAN@GMAIL.COM",
                            NormalizedUserName = "YASEMINKOCAMAN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "66b43c42-24b7-4b72-86b7-8c438e5a50c1",
                            TwoFactorEnabled = false,
                            UserName = "Yasemin Kocaman"
                        },
                        new
                        {
                            Id = new Guid("12cc6796-f791-411a-a07b-f84d7d19fa87"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "e53bbfdf-d40d-4327-a87c-490ee2d1049c",
                            Email = "aysenur.cetin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ayşe Nur",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Çetin",
                            LockoutEnabled = false,
                            NormalizedEmail = "AYSENURCETIN@GMAIL.COM",
                            NormalizedUserName = "AYSENURCETIN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "87aaab08-23f0-4859-ac93-c20413eabf6b",
                            TwoFactorEnabled = false,
                            UserName = "Ayşe Nur Çetin"
                        },
                        new
                        {
                            Id = new Guid("0e3785ad-4dc5-4689-b76b-1a320b7060fd"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "db713c7f-92eb-4b75-85c6-5db487909312",
                            Email = "seyda.muftuoglu@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şeyda",
                            Gender = 1,
                            ImageUrl = "image29",
                            LastName = "Müftüoğlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEYDAMUFTUOGLU@GMAIL.COM",
                            NormalizedUserName = "SEYDAMUFTUOGLU@GMAIL.COM",
                            PhoneNumber = "+905439999929",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "b315a76e-dcea-4071-b4aa-2069da66d11e",
                            TwoFactorEnabled = false,
                            UserName = "Şeyda Müftüoğlu"
                        },
                        new
                        {
                            Id = new Guid("22a6b6a7-378f-4ccd-98b5-4ff50c0eded4"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "e06af06f-2916-4f73-aff8-dfa667eca8cb",
                            Email = "goksu.gokcesu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Göksu",
                            Gender = 1,
                            ImageUrl = "image30",
                            LastName = "Gökçesu",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKSUGOKCESU@GMAIL.COM",
                            NormalizedUserName = "GOKSUGOKCESU@GMAIL.COM",
                            PhoneNumber = "+905439999930",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "520e3668-6d3c-40cb-9e99-631c48a88da8",
                            TwoFactorEnabled = false,
                            UserName = "Göksu Gökçesu"
                        },
                        new
                        {
                            Id = new Guid("aa795eb0-f881-4546-adef-4933362c2cc4"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "3fa7e360-13c2-413a-8e36-847d1022b404",
                            Email = "sevval.vural@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şevval",
                            Gender = 1,
                            ImageUrl = "image31",
                            LastName = "Vural",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEVVALVURAL@GMAIL.COM",
                            NormalizedUserName = "SEVVALVURAL@GMAIL.COM",
                            PhoneNumber = "+905439999931",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "e3330a2c-9ce1-44fb-a34d-d0b752bb97ca",
                            TwoFactorEnabled = false,
                            UserName = "Şevval Vural"
                        },
                        new
                        {
                            Id = new Guid("8408122a-242b-4bd9-ae55-e14119623c8f"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "07c3b0d4-681b-4938-9389-587dc6c3c549",
                            Email = "rabia.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Rabia",
                            Gender = 1,
                            ImageUrl = "image32",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "RABIACANIGUR@GMAIL.COM",
                            NormalizedUserName = "RABIACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999932",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a58753a4-03a6-438d-bf96-a80cd6f89d2a",
                            TwoFactorEnabled = false,
                            UserName = "Rabia Canıgür"
                        },
                        new
                        {
                            Id = new Guid("7c071165-69c8-417a-bfa1-3a31564f3043"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "13ff5445-7c20-4646-b3a4-9d64f4d6f486",
                            Email = "meltem.erkmen.kandil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Meltem",
                            Gender = 1,
                            ImageUrl = "image33",
                            LastName = "Erkmen Kandil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELTEMERKMENKANDIL@GMAIL.COM",
                            NormalizedUserName = "MELTEMERKMENKANDIL@GMAIL.COM",
                            PhoneNumber = "+905439999933",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "1b6b5793-a36b-438c-bc1f-f26468897cef",
                            TwoFactorEnabled = false,
                            UserName = "Meltem Erkmen Kandil"
                        },
                        new
                        {
                            Id = new Guid("9375907f-a7a7-410d-8f6a-6daacefbe652"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "602b50e0-2f08-41ab-b469-cede37fd5ae5",
                            Email = "ahmet.deniz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmet",
                            Gender = 2,
                            ImageUrl = "image34",
                            LastName = "Deniz",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMETDENIZ@GMAIL.COM",
                            NormalizedUserName = "AHMETDENIZ@GMAIL.COM",
                            PhoneNumber = "+905439999934",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a31a2f28-a1f0-4fd3-af82-193eb101f8f1",
                            TwoFactorEnabled = false,
                            UserName = "Ahmet Deniz"
                        },
                        new
                        {
                            Id = new Guid("e8dfbd8d-8e31-4bed-81cb-97f4f33872f6"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "d7c547fd-058a-4cc2-b4fa-24f7fe67157d",
                            Email = "muhsin.cetinkaya@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Muhsin",
                            Gender = 2,
                            ImageUrl = "image35",
                            LastName = "Çetinkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUHSINCETINKAYA@GMAIL.COM",
                            NormalizedUserName = "MUHSINCETINKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999935",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "03f66acd-5a65-41e0-8bb0-e33b2a0250b5",
                            TwoFactorEnabled = false,
                            UserName = "Muhsin Çetinkaya"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb")
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadgeIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0299a520-25ca-49ec-9492-035ccf2ed5b8"),
                            BadgeIcon = "https://w7.pngwing.com/pngs/423/1004/png-transparent-medal-gold-winner-badge-achievement-reward-army-champion-awards-icon.png",
                            BadgeName = "Karda Yürüyen",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 4, 48, 995, DateTimeKind.Local).AddTicks(4406),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6296d6f2-052e-40fb-bf0b-72eb2ac34a6d"),
                            BadgeIcon = "https://static.vecteezy.com/system/resources/previews/014/606/031/original/golden-yellow-trophy-icon-for-the-winner-of-a-sports-event-png.png",
                            BadgeName = "Sosyal Kelebek",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 4, 48, 995, DateTimeKind.Local).AddTicks(4470),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("820b74d4-c6f7-4823-a45e-6dbd41311212"),
                            BadgeIcon = "https://e7.pngegg.com/pngimages/1002/183/png-clipart-smiley-smiley-miscellaneous-smiley.png",
                            BadgeName = "Gülen Yüz",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 4, 48, 995, DateTimeKind.Local).AddTicks(4478),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5d706d85-8780-43eb-9f0b-21f6d6ae9a07"),
                            BadgeIcon = "https://www.shutterstock.com/image-vector/transparent-winner-icon-png-vector-260nw-1945885621.jpg",
                            BadgeName = "Yüce Gönüllü",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 4, 48, 995, DateTimeKind.Local).AddTicks(4485),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8bf1da2f-a48e-4ecf-94a0-3b85e3cb32d2"),
                            BadgeIcon = "https://img.lovepik.com/png/20231009/Outstanding-color-male-employees-of-the-month-staff-the-company_136776_wh860.png",
                            BadgeName = "Ayın Elemanı",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 4, 48, 995, DateTimeKind.Local).AddTicks(4491),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1328a6c8-9ebd-4b22-978a-453f0c31bbdf"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 4, 48, 995, DateTimeKind.Utc).AddTicks(6460),
                            EventName = "Ofis Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1e7bc8e4-59a8-4f63-af21-c7697a727f64"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 4, 48, 995, DateTimeKind.Utc).AddTicks(6466),
                            EventName = "Dilek Alma Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3c5b8e39-a8f8-4671-a573-2e1e5e8a6f85"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 4, 48, 995, DateTimeKind.Utc).AddTicks(6468),
                            EventName = "Dilek Gerçekleştirme Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e6481d73-37e2-4b7e-a817-a7d0921797c6"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 4, 48, 995, DateTimeKind.Utc).AddTicks(6471),
                            EventName = "Stant Etkinliği",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.VolunteerScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("VolunteerScores");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserBadges")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.VolunteerScore", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Navigation("UserBadges");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
