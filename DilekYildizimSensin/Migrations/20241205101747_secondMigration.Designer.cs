// <auto-generated />
using System;
using DilekYildizimSensin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DilekYildizimSensin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241205101747_secondMigration")]
    partial class secondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e"),
                            ConcurrencyStamp = "e13af6e8-3115-46bd-9455-53a40ef1125b",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4"),
                            ConcurrencyStamp = "27dbfdd8-ec5e-4a6f-87b0-213b794f3dc1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb"),
                            ConcurrencyStamp = "63d93637-7fda-470a-89c5-798e85d0d29c",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "62991720-5b83-43ee-b989-9d85a2e3e434",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/024/183/525/non_2x/avatar-of-a-man-portrait-of-a-young-guy-illustration-of-male-character-in-modern-color-style-vector.jpg",
                            LastName = "Bey",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEADmgBdIITXf3cW1ZN+Wd5Jf4hq+Twi3HCv3Mtqv3tZwWvQQ0q6+Z3v1Q1JaW71CNQ==",
                            PhoneNumber = "+905439999999",
                            PhoneNumberConfirmed = true,
                            Score = 520,
                            SecurityStamp = "04b84e99-d7a2-4eb7-9b99-68b1ed9604f3",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "26154b85-ea7c-4037-a88b-01631406cedf",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://img.freepik.com/premium-photo/graphic-designer-digital-avatar-generative-ai_934475-9292.jpg",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBbfbBmXVMG4H+Skww9qWcQXLxQIkuPdXjz9QbiHgAbZR0+4eKFpTbyTZU13YHAsvg==",
                            PhoneNumber = "+905439999988",
                            PhoneNumberConfirmed = false,
                            Score = 123,
                            SecurityStamp = "12cd8d84-c7ed-4128-9b00-952d4b39bae5",
                            TwoFactorEnabled = false,
                            UserName = "umutyasar"
                        },
                        new
                        {
                            Id = new Guid("aa82d5a4-7bbc-4230-baa9-966adb476fac"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "0e917787-8fe4-47ca-84c7-4ac5d508b7ef",
                            Email = "ruken.yavuz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruken",
                            Gender = 1,
                            ImageUrl = "image1",
                            LastName = "Yavuz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUKENYAVUZ@GMAIL.COM",
                            NormalizedUserName = "RUKENYAVUZ@GMAIL.COM",
                            PhoneNumber = "+905439999901",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "180b97a1-483a-4194-8eca-0753ceafa314",
                            TwoFactorEnabled = false,
                            UserName = "Ruken Yavuz"
                        },
                        new
                        {
                            Id = new Guid("950cd342-5aab-4c08-a1b4-c3d8c36d7b0f"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "f3c117b1-eb80-4aaa-a7e4-70737eb3c0c7",
                            Email = "cem.aksu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cem",
                            Gender = 2,
                            ImageUrl = "image2",
                            LastName = "Aksu",
                            LockoutEnabled = false,
                            NormalizedEmail = "CEMAKSU@GMAIL.COM",
                            NormalizedUserName = "CEMAKSU@GMAIL.COM",
                            PhoneNumber = "+905439999902",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "efb3f833-fbec-4afe-85af-280667748de8",
                            TwoFactorEnabled = false,
                            UserName = "Cem Aksu"
                        },
                        new
                        {
                            Id = new Guid("8173d44d-ca0d-4495-b205-7858f9e3f990"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "1808159f-8597-4a76-89a8-7e85ea0eb62a",
                            Email = "irem.keles@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İrem",
                            Gender = 1,
                            ImageUrl = "image3",
                            LastName = "Keleş",
                            LockoutEnabled = false,
                            NormalizedEmail = "IREMKELES@GMAIL.COM",
                            NormalizedUserName = "IREMKELES@GMAIL.COM",
                            PhoneNumber = "+905439999903",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "9cf71238-5e1a-4080-9d25-5643732fdeb2",
                            TwoFactorEnabled = false,
                            UserName = "İrem Keleş"
                        },
                        new
                        {
                            Id = new Guid("5f98408c-7965-4701-9d25-457a4b3304fd"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "90460f74-e881-48c9-9c83-362e3090d228",
                            Email = "hazal.serkaya@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hazal",
                            Gender = 1,
                            ImageUrl = "image4",
                            LastName = "Serkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "HAZALSERKAYA@GMAIL.COM",
                            NormalizedUserName = "HAZALSERKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999904",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "1b0383ae-97be-455a-9c2a-d0e2c24cd4a1",
                            TwoFactorEnabled = false,
                            UserName = "Hazal Serkaya"
                        },
                        new
                        {
                            Id = new Guid("1fd9e228-d872-4b40-ac1c-ea1db70f7cfd"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "4f598c20-f40a-4be5-92c1-739ffe5d56d0",
                            Email = "zeynep.sena.celik@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zeynep Sena",
                            Gender = 1,
                            ImageUrl = "image5",
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZEYNEPSENACELIK@GMAIL.COM",
                            NormalizedUserName = "ZEYNEPSENACELIK@GMAIL.COM",
                            PhoneNumber = "+905439999905",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "87116637-7fb5-4031-9807-b24edb83f193",
                            TwoFactorEnabled = false,
                            UserName = "Zeynep Sena Çelik"
                        },
                        new
                        {
                            Id = new Guid("d287dec6-1793-4d6e-8173-1df1277a32b7"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "2929c11c-5faf-4493-bd5a-032132ef7aa8",
                            Email = "ali.ozdemir@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 2,
                            ImageUrl = "image6",
                            LastName = "Özdemir",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALIÖZDEMIR@GMAIL.COM",
                            NormalizedUserName = "ALIÖZDEMIR@GMAIL.COM",
                            PhoneNumber = "+905439999906",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "d4c626be-f4a8-4a51-856b-727f44ea7617",
                            TwoFactorEnabled = false,
                            UserName = "Ali Özdemir"
                        },
                        new
                        {
                            Id = new Guid("da6d45e6-679b-477b-8b74-849685babad1"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "9df638a8-1194-4a01-be3c-a54f168fa9cd",
                            Email = "erhan.zorlu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Erhan",
                            Gender = 2,
                            ImageUrl = "image7",
                            LastName = "Zorlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERHANZORLU@GMAIL.COM",
                            NormalizedUserName = "ERHANZORLU@GMAIL.COM",
                            PhoneNumber = "+905439999907",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a9bcd0ea-fdf7-4b54-9c75-eb04f89b31f9",
                            TwoFactorEnabled = false,
                            UserName = "Erhan Zorlu"
                        },
                        new
                        {
                            Id = new Guid("a0b79174-7b8a-4e90-bcde-651143d1d074"),
                            AccessFailedCount = 0,
                            Age = 21,
                            ConcurrencyStamp = "78986e42-3316-4124-a86c-26e04537f594",
                            Email = "yagmur.ay@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yağmur",
                            Gender = 1,
                            ImageUrl = "image8",
                            LastName = "Ay",
                            LockoutEnabled = false,
                            NormalizedEmail = "YAĞMURAY@GMAIL.COM",
                            NormalizedUserName = "YAĞMURAY@GMAIL.COM",
                            PhoneNumber = "+905439999908",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "406272c7-3b85-45bd-9581-7c9ad532b58f",
                            TwoFactorEnabled = false,
                            UserName = "Yağmur Ay"
                        },
                        new
                        {
                            Id = new Guid("368d9f7a-aaae-4c5d-bdf9-50416a26387f"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "44b51f11-893b-4e37-a89a-433eba9af1e8",
                            Email = "nora.ipekci@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nora",
                            Gender = 1,
                            ImageUrl = "image9",
                            LastName = "İpekçi",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORAİPEKÇİ@GMAIL.COM",
                            NormalizedUserName = "NORAİPEKÇİ@GMAIL.COM",
                            PhoneNumber = "+905439999909",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c3c092a8-1530-44a1-b6e3-05aca3218319",
                            TwoFactorEnabled = false,
                            UserName = "Nora İpekçi"
                        },
                        new
                        {
                            Id = new Guid("653dbdff-52aa-4804-b44c-2df71e82abf4"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "09295564-0f43-4087-b59e-3260689221ab",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image10",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEÖZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEÖZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999910",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "3e9a0d6f-df47-4701-9de1-8dfc4c3b4967",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("86edb692-3e74-4f67-b674-7b264cc08f3e"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "9b2f2ad5-bc7a-4db2-bbef-56e4b1caddca",
                            Email = "alper.goksel.yilmaz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alper Göksel",
                            Gender = 2,
                            ImageUrl = "image11",
                            LastName = "Yılmaz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            NormalizedUserName = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            PhoneNumber = "+905439999911",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "dbd2f4a6-5e81-43c0-94da-5045cb60fc2d",
                            TwoFactorEnabled = false,
                            UserName = "Alper Göksel Yılmaz"
                        },
                        new
                        {
                            Id = new Guid("9cdf1606-785e-4b90-b0a1-bccdf14ea9b7"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "f7a6db94-58bd-4c2d-80f2-8f18857a4d8b",
                            Email = "saliha.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Saliha",
                            Gender = 1,
                            ImageUrl = "image12",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALIHACANIGUR@GMAIL.COM",
                            NormalizedUserName = "SALIHACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999912",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "779cdba3-6d7c-49d1-81df-8310624e6234",
                            TwoFactorEnabled = false,
                            UserName = "Saliha Canıgür"
                        },
                        new
                        {
                            Id = new Guid("cab07b77-dd07-4448-b0d5-b828485b403b"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "62814df7-fd63-4e55-9485-6e58c9e8e0c4",
                            Email = "huseyin.adas@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hüseyin",
                            Gender = 2,
                            ImageUrl = "image13",
                            LastName = "Adaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUSEYINADAS@GMAIL.COM",
                            NormalizedUserName = "HUSEYINADAS@GMAIL.COM",
                            PhoneNumber = "+905439999913",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "78a97496-d065-44ae-9b50-63ccb99cd87e",
                            TwoFactorEnabled = false,
                            UserName = "Hüseyin Adaş"
                        },
                        new
                        {
                            Id = new Guid("c36ac83a-52c0-4278-9709-3052cac6ce75"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "c9ca3bbb-72c2-41aa-b541-1a9e814380ee",
                            Email = "ferit.erden@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ferit",
                            Gender = 2,
                            ImageUrl = "image14",
                            LastName = "Erden",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERITERDEN@GMAIL.COM",
                            NormalizedUserName = "FERITERDEN@GMAIL.COM",
                            PhoneNumber = "+905439999914",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "76b29679-b8bf-4332-9db4-ce95a52707e4",
                            TwoFactorEnabled = false,
                            UserName = "Ferit Erden"
                        },
                        new
                        {
                            Id = new Guid("b81e274f-3970-4ff7-bf01-29c16d24e6b0"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "d3278fe8-ec74-4a51-aaad-7fce73376281",
                            Email = "nergis@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image15",
                            LastName = "Gül",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGIS@GMAIL.COM",
                            NormalizedUserName = "NERGIS@GMAIL.COM",
                            PhoneNumber = "+905439999915",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "b13df0c4-575c-4d35-bb57-96a3bcafcad6",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Gül"
                        },
                        new
                        {
                            Id = new Guid("96a53412-d994-432e-adf4-95338f0eb2ed"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "7e965c02-f19f-4b4e-a766-f84d19235fce",
                            Email = "ilayda.celebi@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "İlayda",
                            Gender = 1,
                            ImageUrl = "image16",
                            LastName = "Çelebi",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILAYDACELEBI@GMAIL.COM",
                            NormalizedUserName = "ILAYDACELEBI@GMAIL.COM",
                            PhoneNumber = "+905439999916",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "436378da-3634-40de-a080-f43dda1847bb",
                            TwoFactorEnabled = false,
                            UserName = "İlayda Çelebi"
                        },
                        new
                        {
                            Id = new Guid("069c0ec2-15f7-4802-9585-dbe9c3066ca4"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "0dd7c3b8-99e8-4b75-9107-1a4adcf9d6ed",
                            Email = "gokhan.sahin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gökhan",
                            Gender = 2,
                            ImageUrl = "image17",
                            LastName = "Şahin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKHANSHAHIN@GMAIL.COM",
                            NormalizedUserName = "GOKHANSHAHIN@GMAIL.COM",
                            PhoneNumber = "+905439999917",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "ad24cec5-6fff-4817-9f2e-c81032542aa5",
                            TwoFactorEnabled = false,
                            UserName = "Gökhan Şahin"
                        },
                        new
                        {
                            Id = new Guid("62124661-1ac0-4b28-a7c6-f689a8578f1f"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "b112d2bb-374f-4373-b3d3-940f79a4f533",
                            Email = "ozge.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Özge",
                            Gender = 1,
                            ImageUrl = "image18",
                            LastName = "Akar",
                            LockoutEnabled = false,
                            NormalizedEmail = "OZGEAKAR@GMAIL.COM",
                            NormalizedUserName = "OZGEAKAR@GMAIL.COM",
                            PhoneNumber = "+905439999918",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "24be433d-aa71-4e7b-8237-f695652caa33",
                            TwoFactorEnabled = false,
                            UserName = "Özge Akar"
                        },
                        new
                        {
                            Id = new Guid("a107aa63-cdfb-4aa0-9bc9-73296cc97891"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "e8491c46-d4e1-4358-8f55-7b58bcc4a0e4",
                            Email = "ipek.gurdamar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İpek",
                            Gender = 1,
                            ImageUrl = "image19",
                            LastName = "Gürdamar",
                            LockoutEnabled = false,
                            NormalizedEmail = "IPEKGURDAMAR@GMAIL.COM",
                            NormalizedUserName = "IPEKGURDAMAR@GMAIL.COM",
                            PhoneNumber = "+905439999919",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c296081a-3ac5-49f7-80dd-b9a1c0a243e2",
                            TwoFactorEnabled = false,
                            UserName = "İpek Gürdamar"
                        },
                        new
                        {
                            Id = new Guid("db7e0cd7-c62a-4ffe-83d1-3f1f7f86b07a"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "fa91dd4b-246c-4989-af78-50728c2e0355",
                            Email = "melisa.ertan@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melisa",
                            Gender = 1,
                            ImageUrl = "image20",
                            LastName = "Ertan",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELISAERTAN@GMAIL.COM",
                            NormalizedUserName = "MELISAERTAN@GMAIL.COM",
                            PhoneNumber = "+905439999920",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "512d2d34-fd56-4123-b18c-c5dfcf98835d",
                            TwoFactorEnabled = false,
                            UserName = "Melisa Ertan"
                        },
                        new
                        {
                            Id = new Guid("cc9226e3-9f9c-4b2c-8a4e-5623a3df6879"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "a199cb5c-41fb-4424-a5aa-2baa97f3a1cb",
                            Email = "armagan.yagci@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Armağan",
                            Gender = 2,
                            ImageUrl = "image21",
                            LastName = "Yağcı",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARMAGANYAGCI@GMAIL.COM",
                            NormalizedUserName = "ARMAGANYAGCI@GMAIL.COM",
                            PhoneNumber = "+905439999921",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "01c7081a-c604-4cc7-9971-b4e78c1267b2",
                            TwoFactorEnabled = false,
                            UserName = "Armağan Yağcı"
                        },
                        new
                        {
                            Id = new Guid("86d9dd8f-fc0c-40c4-bac1-e2eeb0b96836"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "b9c711ef-492f-4387-9fa8-4bf0426442b3",
                            Email = "filiz.cetin.narsap@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Filiz",
                            Gender = 1,
                            ImageUrl = "image22",
                            LastName = "Çetin Narşap",
                            LockoutEnabled = false,
                            NormalizedEmail = "FILIZCETINNARSAP@GMAIL.COM",
                            NormalizedUserName = "FILIZCETINNARSAP@GMAIL.COM",
                            PhoneNumber = "+905439999922",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ae4ea147-1c3b-48aa-8520-cc379228dc4e",
                            TwoFactorEnabled = false,
                            UserName = "Filiz Çetin Narşap"
                        },
                        new
                        {
                            Id = new Guid("61c637aa-ac71-4377-97d1-2f6f5afd97ae"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "2bdf9c11-fe16-480e-80bf-1d045aecc0f7",
                            Email = "hande.eren@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hande",
                            Gender = 1,
                            ImageUrl = "image23",
                            LastName = "Eren",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANDEREN@GMAIL.COM",
                            NormalizedUserName = "HANDEREN@GMAIL.COM",
                            PhoneNumber = "+905439999923",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "1a2b87da-e594-40e1-8255-b48527a90701",
                            TwoFactorEnabled = false,
                            UserName = "Hande Eren"
                        },
                        new
                        {
                            Id = new Guid("cc4b8bce-d8eb-49db-a072-753970fc437e"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "a7bb438f-a5d7-4c7d-8128-1d3ab520d349",
                            Email = "nergis.aktas@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image24",
                            LastName = "Aktaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGISAKTAS@GMAIL.COM",
                            NormalizedUserName = "NERGISAKTAS@GMAIL.COM",
                            PhoneNumber = "+905439999924",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "63699e42-f6fd-4a0c-8394-40b178226763",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Aktaş"
                        },
                        new
                        {
                            Id = new Guid("1ff178f6-1a55-4385-b231-bac12306df61"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "e7a4ae8a-dcb9-4916-a895-26988f7ae763",
                            Email = "gunsu.berber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Günsu",
                            Gender = 1,
                            ImageUrl = "image25",
                            LastName = "Berber",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUNSUBERBER@GMAIL.COM",
                            NormalizedUserName = "GUNSUBERBER@GMAIL.COM",
                            PhoneNumber = "+905439999925",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "a1854222-228a-45e6-8e5a-f3b1b5a42365",
                            TwoFactorEnabled = false,
                            UserName = "Günsu Berber"
                        },
                        new
                        {
                            Id = new Guid("d6b1fcce-30a0-4838-915b-99cefdf05ebc"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "a85f3589-293b-4994-b049-48b12269d563",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image26",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEOZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEOZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999926",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "76757a07-4f6e-456a-bcfa-cfb0e0d613ca",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("260d75a1-618e-4345-b490-2c8128f3b0dd"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "0d2c2ad5-388f-42aa-b40b-172390d6bc26",
                            Email = "yasemin.kocaman@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Yasemin",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Kocaman",
                            LockoutEnabled = false,
                            NormalizedEmail = "YASEMINKOCAMAN@GMAIL.COM",
                            NormalizedUserName = "YASEMINKOCAMAN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "79a8d37a-8a39-407e-9e01-1a7327ac541e",
                            TwoFactorEnabled = false,
                            UserName = "Yasemin Kocaman"
                        },
                        new
                        {
                            Id = new Guid("93331b65-cdfc-4465-a773-4e313a9c0e26"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "3dfdf344-1148-44b1-8b7e-e2dc82d7ebfc",
                            Email = "aysenur.cetin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ayşe Nur",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Çetin",
                            LockoutEnabled = false,
                            NormalizedEmail = "AYSENURCETIN@GMAIL.COM",
                            NormalizedUserName = "AYSENURCETIN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "03110cfc-a55f-4e19-b7aa-551ce64093dd",
                            TwoFactorEnabled = false,
                            UserName = "Ayşe Nur Çetin"
                        },
                        new
                        {
                            Id = new Guid("34e44aa9-0006-4ddc-aa3f-7cf3406af9e6"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "387ae047-78c0-49af-be3b-ee0b7cfa4de1",
                            Email = "seyda.muftuoglu@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şeyda",
                            Gender = 1,
                            ImageUrl = "image29",
                            LastName = "Müftüoğlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEYDAMUFTUOGLU@GMAIL.COM",
                            NormalizedUserName = "SEYDAMUFTUOGLU@GMAIL.COM",
                            PhoneNumber = "+905439999929",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "99aaf119-e97f-4c41-b0a8-8ab2b2068027",
                            TwoFactorEnabled = false,
                            UserName = "Şeyda Müftüoğlu"
                        },
                        new
                        {
                            Id = new Guid("56f236e0-97fd-462c-b8c5-106599d0af4c"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "ab9e37ae-843f-4eb9-aca3-0341548967ca",
                            Email = "goksu.gokcesu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Göksu",
                            Gender = 1,
                            ImageUrl = "image30",
                            LastName = "Gökçesu",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKSUGOKCESU@GMAIL.COM",
                            NormalizedUserName = "GOKSUGOKCESU@GMAIL.COM",
                            PhoneNumber = "+905439999930",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "63c791d7-9d1f-486a-be71-36d8ec6b9e40",
                            TwoFactorEnabled = false,
                            UserName = "Göksu Gökçesu"
                        },
                        new
                        {
                            Id = new Guid("c4a87295-8665-4745-a2c6-5fa0d7f48940"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "17f2226a-d715-412a-b73f-ff6289f84490",
                            Email = "sevval.vural@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şevval",
                            Gender = 1,
                            ImageUrl = "image31",
                            LastName = "Vural",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEVVALVURAL@GMAIL.COM",
                            NormalizedUserName = "SEVVALVURAL@GMAIL.COM",
                            PhoneNumber = "+905439999931",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "dbae648a-9dc4-4f73-a244-ab329ea10e85",
                            TwoFactorEnabled = false,
                            UserName = "Şevval Vural"
                        },
                        new
                        {
                            Id = new Guid("f864429b-dada-4ea5-8f05-84ba4cb68550"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "980453a9-3be5-454c-b183-3128efbb728c",
                            Email = "rabia.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Rabia",
                            Gender = 1,
                            ImageUrl = "image32",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "RABIACANIGUR@GMAIL.COM",
                            NormalizedUserName = "RABIACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999932",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a6f5cbf2-e5c6-41d5-8cb1-9b1d98b3fe71",
                            TwoFactorEnabled = false,
                            UserName = "Rabia Canıgür"
                        },
                        new
                        {
                            Id = new Guid("74530d6e-c5bc-4a38-941c-38c89d3eccf1"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "3045a27c-5e45-432c-b6dd-bad84964594f",
                            Email = "meltem.erkmen.kandil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Meltem",
                            Gender = 1,
                            ImageUrl = "image33",
                            LastName = "Erkmen Kandil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELTEMERKMENKANDIL@GMAIL.COM",
                            NormalizedUserName = "MELTEMERKMENKANDIL@GMAIL.COM",
                            PhoneNumber = "+905439999933",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "4a922576-a591-4000-9b39-a54936909bb0",
                            TwoFactorEnabled = false,
                            UserName = "Meltem Erkmen Kandil"
                        },
                        new
                        {
                            Id = new Guid("cc0d702c-e91f-4c15-82fd-ecd17e3773a2"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "3221b195-47a4-48a3-a74e-daaa1a761451",
                            Email = "ahmet.deniz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmet",
                            Gender = 2,
                            ImageUrl = "image34",
                            LastName = "Deniz",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMETDENIZ@GMAIL.COM",
                            NormalizedUserName = "AHMETDENIZ@GMAIL.COM",
                            PhoneNumber = "+905439999934",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ed8706fb-7b0c-46a3-9872-985ab6c1f054",
                            TwoFactorEnabled = false,
                            UserName = "Ahmet Deniz"
                        },
                        new
                        {
                            Id = new Guid("b754a7eb-1c7d-4c5f-9ed4-e2eb91bad017"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "a25f5412-8b83-4e5f-bd9e-9556d4ff1b5c",
                            Email = "muhsin.cetinkaya@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Muhsin",
                            Gender = 2,
                            ImageUrl = "image35",
                            LastName = "Çetinkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUHSINCETINKAYA@GMAIL.COM",
                            NormalizedUserName = "MUHSINCETINKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999935",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "2bc2a76b-dad4-4b21-a4e0-3b665dcd6618",
                            TwoFactorEnabled = false,
                            UserName = "Muhsin Çetinkaya"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb")
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadgeIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0299a520-25ca-49ec-9492-035ccf2ed5b8"),
                            BadgeIcon = "https://w7.pngwing.com/pngs/423/1004/png-transparent-medal-gold-winner-badge-achievement-reward-army-champion-awards-icon.png",
                            BadgeName = "Dilek Perisi",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 13, 17, 46, 126, DateTimeKind.Local).AddTicks(1773),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6296d6f2-052e-40fb-bf0b-72eb2ac34a6d"),
                            BadgeIcon = "https://static.vecteezy.com/system/resources/previews/014/606/031/original/golden-yellow-trophy-icon-for-the-winner-of-a-sports-event-png.png",
                            BadgeName = "Dilek Yıldızı",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 13, 17, 46, 126, DateTimeKind.Local).AddTicks(1816),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("820b74d4-c6f7-4823-a45e-6dbd41311212"),
                            BadgeIcon = "https://e7.pngegg.com/pngimages/1002/183/png-clipart-smiley-smiley-miscellaneous-smiley.png",
                            BadgeName = "Gülen Yüz",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 13, 17, 46, 126, DateTimeKind.Local).AddTicks(1822),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1328a6c8-9ebd-4b22-978a-453f0c31bbdf"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 10, 17, 46, 126, DateTimeKind.Utc).AddTicks(3126),
                            EventName = "Diğer Gönüllü Faaliyetleri",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1e7bc8e4-59a8-4f63-af21-c7697a727f64"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 10, 17, 46, 126, DateTimeKind.Utc).AddTicks(3130),
                            EventName = "Dilek Alma Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3c5b8e39-a8f8-4671-a573-2e1e5e8a6f85"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 12, 5, 10, 17, 46, 126, DateTimeKind.Utc).AddTicks(3133),
                            EventName = "Dilek Gerçekleştirme Etkinliği",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserBadges")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId");

                    b.Navigation("AppUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Navigation("UserBadges");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
