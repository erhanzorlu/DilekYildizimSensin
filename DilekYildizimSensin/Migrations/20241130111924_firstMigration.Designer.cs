// <auto-generated />
using System;
using DilekYildizimSensin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DilekYildizimSensin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241130111924_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e"),
                            ConcurrencyStamp = "41b3c4d4-ad03-4b59-b3ce-ecffdfba8e3c",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4"),
                            ConcurrencyStamp = "3b8bbb35-1b51-40a9-812b-f86f82354ee0",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb"),
                            ConcurrencyStamp = "1d09c78b-ec20-4bda-b0f2-ad9b4f3a660c",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "43844c42-1af9-4948-8ba5-018a921cec19",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/024/183/525/non_2x/avatar-of-a-man-portrait-of-a-young-guy-illustration-of-male-character-in-modern-color-style-vector.jpg",
                            LastName = "Bey",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFmJ/zIqVROhzzJsYbYcjomPlXN9IgEmtEKckHneDQpLN6KxjkFTM+Gk5hzl45cSJg==",
                            PhoneNumber = "+905439999999",
                            PhoneNumberConfirmed = true,
                            Score = 520,
                            SecurityStamp = "aad4ab39-cf7f-4467-9701-8f143e4d2718",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "73ee2cc9-bc7c-442b-b685-dd4ac3f8e94e",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://img.freepik.com/premium-photo/graphic-designer-digital-avatar-generative-ai_934475-9292.jpg",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECRGfBhDxmMk4Q+XDpGG4SjdgjoqZTkWWgmuwUgokvM2Rp37k9G6hUvpgfmdPv7ZgA==",
                            PhoneNumber = "+905439999988",
                            PhoneNumberConfirmed = false,
                            Score = 123,
                            SecurityStamp = "17d70f2d-dbc7-4fbe-99c3-5592372021fd",
                            TwoFactorEnabled = false,
                            UserName = "umutyasar"
                        },
                        new
                        {
                            Id = new Guid("0b9dfd38-9960-4ec1-8245-7165692527e5"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "e32d776f-d3e4-4020-bfd7-68edec4ccb74",
                            Email = "ruken.yavuz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruken",
                            Gender = 1,
                            ImageUrl = "image1",
                            LastName = "Yavuz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUKENYAVUZ@GMAIL.COM",
                            NormalizedUserName = "RUKENYAVUZ@GMAIL.COM",
                            PhoneNumber = "+905439999901",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "135ed3e5-81a9-4966-b19c-6a29f395c8c4",
                            TwoFactorEnabled = false,
                            UserName = "Ruken Yavuz"
                        },
                        new
                        {
                            Id = new Guid("9858145e-80cf-4f6c-b8c8-985fbda5e0e9"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "21f628e2-4c49-469d-8f8b-a2dcc876a808",
                            Email = "cem.aksu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cem",
                            Gender = 2,
                            ImageUrl = "image2",
                            LastName = "Aksu",
                            LockoutEnabled = false,
                            NormalizedEmail = "CEMAKSU@GMAIL.COM",
                            NormalizedUserName = "CEMAKSU@GMAIL.COM",
                            PhoneNumber = "+905439999902",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "b20fc5f6-a98a-40b0-b9e4-3562f610dc1d",
                            TwoFactorEnabled = false,
                            UserName = "Cem Aksu"
                        },
                        new
                        {
                            Id = new Guid("82190efd-135e-429a-b06f-b2f38aeaa967"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "2d283a9d-041e-41aa-a3d4-1dc1866dac18",
                            Email = "irem.keles@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İrem",
                            Gender = 1,
                            ImageUrl = "image3",
                            LastName = "Keleş",
                            LockoutEnabled = false,
                            NormalizedEmail = "IREMKELES@GMAIL.COM",
                            NormalizedUserName = "IREMKELES@GMAIL.COM",
                            PhoneNumber = "+905439999903",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "b72d486f-be34-4f5a-9c67-17d39aaa1dd6",
                            TwoFactorEnabled = false,
                            UserName = "İrem Keleş"
                        },
                        new
                        {
                            Id = new Guid("eb44645f-cba2-4f98-bf3d-22d3ae8a9b81"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "08666c64-867f-4e72-9eb5-256efeef4ed5",
                            Email = "hazal.serkaya@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hazal",
                            Gender = 1,
                            ImageUrl = "image4",
                            LastName = "Serkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "HAZALSERKAYA@GMAIL.COM",
                            NormalizedUserName = "HAZALSERKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999904",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a3a1ae6f-ec7c-440d-ab87-38216910c627",
                            TwoFactorEnabled = false,
                            UserName = "Hazal Serkaya"
                        },
                        new
                        {
                            Id = new Guid("277c3b4a-0e6a-4444-aa0f-2808bb42a812"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "02966bbe-e05d-4fbf-8ff3-03ea5e544d0e",
                            Email = "zeynep.sena.celik@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zeynep Sena",
                            Gender = 1,
                            ImageUrl = "image5",
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZEYNEPSENACELIK@GMAIL.COM",
                            NormalizedUserName = "ZEYNEPSENACELIK@GMAIL.COM",
                            PhoneNumber = "+905439999905",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "700d58b1-65a1-4cb7-bc85-b656b9274630",
                            TwoFactorEnabled = false,
                            UserName = "Zeynep Sena Çelik"
                        },
                        new
                        {
                            Id = new Guid("09f35bdb-09d8-42c5-8473-e86bb8adfedc"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "3e7901f8-4e00-4be8-9e55-6daf0c600830",
                            Email = "ali.ozdemir@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 2,
                            ImageUrl = "image6",
                            LastName = "Özdemir",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALIÖZDEMIR@GMAIL.COM",
                            NormalizedUserName = "ALIÖZDEMIR@GMAIL.COM",
                            PhoneNumber = "+905439999906",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "9568d76f-c2a2-4a87-9aa8-5721eddd6067",
                            TwoFactorEnabled = false,
                            UserName = "Ali Özdemir"
                        },
                        new
                        {
                            Id = new Guid("e025ca3f-c35b-44fd-a919-e6343a29a09a"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "451cd7d8-600a-4a7e-8a90-4586d2f047d4",
                            Email = "erhan.zorlu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Erhan",
                            Gender = 2,
                            ImageUrl = "image7",
                            LastName = "Zorlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERHANZORLU@GMAIL.COM",
                            NormalizedUserName = "ERHANZORLU@GMAIL.COM",
                            PhoneNumber = "+905439999907",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "a6bdba6e-fb3e-4518-b58f-c49ade77f2c7",
                            TwoFactorEnabled = false,
                            UserName = "Erhan Zorlu"
                        },
                        new
                        {
                            Id = new Guid("64e2f360-dfcd-4cd7-9ac0-3215e94a9ca6"),
                            AccessFailedCount = 0,
                            Age = 21,
                            ConcurrencyStamp = "51fe7f2c-b724-40ab-857a-6cb4f8d1fa78",
                            Email = "yagmur.ay@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yağmur",
                            Gender = 1,
                            ImageUrl = "image8",
                            LastName = "Ay",
                            LockoutEnabled = false,
                            NormalizedEmail = "YAĞMURAY@GMAIL.COM",
                            NormalizedUserName = "YAĞMURAY@GMAIL.COM",
                            PhoneNumber = "+905439999908",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "41848046-ed2e-4cd3-8b3c-a0f07bda16f2",
                            TwoFactorEnabled = false,
                            UserName = "Yağmur Ay"
                        },
                        new
                        {
                            Id = new Guid("9a2b8d91-d4fb-4ab0-9d16-9b6685c587f3"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "74737df6-f5dc-4e07-b735-83a6e6b8a459",
                            Email = "nora.ipekci@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nora",
                            Gender = 1,
                            ImageUrl = "image9",
                            LastName = "İpekçi",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORAİPEKÇİ@GMAIL.COM",
                            NormalizedUserName = "NORAİPEKÇİ@GMAIL.COM",
                            PhoneNumber = "+905439999909",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "4b12a521-73d5-4880-9d7f-2fec93eeaf7f",
                            TwoFactorEnabled = false,
                            UserName = "Nora İpekçi"
                        },
                        new
                        {
                            Id = new Guid("c5d42623-4ecf-462f-aa2d-6196832f4865"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "e321709d-c3ff-40c0-b84e-a4bfaf302605",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image10",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEÖZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEÖZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999910",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "bbab8ac7-39e8-4a7a-a163-a01f1d1d44a2",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("d1d13f11-21da-4754-8c22-6df3ab22424a"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "d7362dec-bbbe-4770-a68d-413a00fdf2ea",
                            Email = "alper.goksel.yilmaz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alper Göksel",
                            Gender = 2,
                            ImageUrl = "image11",
                            LastName = "Yılmaz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            NormalizedUserName = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            PhoneNumber = "+905439999911",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c3da8a0c-f483-4fcd-8383-7ac262b39169",
                            TwoFactorEnabled = false,
                            UserName = "Alper Göksel Yılmaz"
                        },
                        new
                        {
                            Id = new Guid("c2ab9e99-41ce-4018-9a61-0cf96fa9fd0b"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "5da8490c-19be-4dd1-b924-d9376ddee9df",
                            Email = "saliha.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Saliha",
                            Gender = 1,
                            ImageUrl = "image12",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALIHACANIGUR@GMAIL.COM",
                            NormalizedUserName = "SALIHACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999912",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "2c121931-8887-43d8-b83e-9b33c6be0c7d",
                            TwoFactorEnabled = false,
                            UserName = "Saliha Canıgür"
                        },
                        new
                        {
                            Id = new Guid("9ba2bf72-337a-405f-b394-e8c58e50944e"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "1160e345-7788-4a51-a786-4364332e7676",
                            Email = "huseyin.adas@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hüseyin",
                            Gender = 2,
                            ImageUrl = "image13",
                            LastName = "Adaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUSEYINADAS@GMAIL.COM",
                            NormalizedUserName = "HUSEYINADAS@GMAIL.COM",
                            PhoneNumber = "+905439999913",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "eb2ec9ad-072c-4017-bb2e-c156c334ec70",
                            TwoFactorEnabled = false,
                            UserName = "Hüseyin Adaş"
                        },
                        new
                        {
                            Id = new Guid("6ea93f14-eb3d-4e4c-bcd9-e000fdebdc36"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "6e9f604c-34e0-4d1a-84a2-6da3064c9a75",
                            Email = "ferit.erden@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ferit",
                            Gender = 2,
                            ImageUrl = "image14",
                            LastName = "Erden",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERITERDEN@GMAIL.COM",
                            NormalizedUserName = "FERITERDEN@GMAIL.COM",
                            PhoneNumber = "+905439999914",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "290e4b45-e234-4fac-8398-cff306e0024a",
                            TwoFactorEnabled = false,
                            UserName = "Ferit Erden"
                        },
                        new
                        {
                            Id = new Guid("31213e0b-3533-4005-93c1-5d757e4f2449"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "325afce6-6bc7-4267-9d46-fd71320ad7a7",
                            Email = "nergis@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image15",
                            LastName = "Gül",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGIS@GMAIL.COM",
                            NormalizedUserName = "NERGIS@GMAIL.COM",
                            PhoneNumber = "+905439999915",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "43b4c408-f905-4ffc-9a54-3a24460cdf82",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Gül"
                        },
                        new
                        {
                            Id = new Guid("2eba054d-66ff-40ec-bffe-c0b6e8e6ad4e"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "3a485475-89c8-41ec-9b7d-2ccb847892df",
                            Email = "ilayda.celebi@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "İlayda",
                            Gender = 1,
                            ImageUrl = "image16",
                            LastName = "Çelebi",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILAYDACELEBI@GMAIL.COM",
                            NormalizedUserName = "ILAYDACELEBI@GMAIL.COM",
                            PhoneNumber = "+905439999916",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "3d61e6bc-f711-44b6-97af-52484b0cd5da",
                            TwoFactorEnabled = false,
                            UserName = "İlayda Çelebi"
                        },
                        new
                        {
                            Id = new Guid("4f6110c3-66f6-4d55-acd6-02d4023b8245"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "304684fb-34ed-4af6-81b5-089201a339e5",
                            Email = "gokhan.sahin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gökhan",
                            Gender = 2,
                            ImageUrl = "image17",
                            LastName = "Şahin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKHANSHAHIN@GMAIL.COM",
                            NormalizedUserName = "GOKHANSHAHIN@GMAIL.COM",
                            PhoneNumber = "+905439999917",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "586fe7b1-56e4-4f58-a290-c170b5670e9a",
                            TwoFactorEnabled = false,
                            UserName = "Gökhan Şahin"
                        },
                        new
                        {
                            Id = new Guid("b3a59855-0881-426d-87d8-55a7bb58e1ea"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "000c1560-511a-4d85-9571-e471f58ba645",
                            Email = "ozge.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Özge",
                            Gender = 1,
                            ImageUrl = "image18",
                            LastName = "Akar",
                            LockoutEnabled = false,
                            NormalizedEmail = "OZGEAKAR@GMAIL.COM",
                            NormalizedUserName = "OZGEAKAR@GMAIL.COM",
                            PhoneNumber = "+905439999918",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "7651473f-a781-4acf-b7c0-f145fe928c61",
                            TwoFactorEnabled = false,
                            UserName = "Özge Akar"
                        },
                        new
                        {
                            Id = new Guid("341e9302-2bc2-42fe-8bb9-43bf87b4ee9a"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "b5993f54-533e-4061-97d0-4d410b8dbe65",
                            Email = "ipek.gurdamar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İpek",
                            Gender = 1,
                            ImageUrl = "image19",
                            LastName = "Gürdamar",
                            LockoutEnabled = false,
                            NormalizedEmail = "IPEKGURDAMAR@GMAIL.COM",
                            NormalizedUserName = "IPEKGURDAMAR@GMAIL.COM",
                            PhoneNumber = "+905439999919",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "1eeb2970-1cd8-4b5b-9977-30e2dae19560",
                            TwoFactorEnabled = false,
                            UserName = "İpek Gürdamar"
                        },
                        new
                        {
                            Id = new Guid("29a11b04-e0f8-4889-b95a-dd0057c1af00"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "44cad055-d920-4dfb-85d5-e64b0240732f",
                            Email = "melisa.ertan@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melisa",
                            Gender = 1,
                            ImageUrl = "image20",
                            LastName = "Ertan",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELISAERTAN@GMAIL.COM",
                            NormalizedUserName = "MELISAERTAN@GMAIL.COM",
                            PhoneNumber = "+905439999920",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "ece65c9f-c207-4c34-8763-1f2cf2473bb7",
                            TwoFactorEnabled = false,
                            UserName = "Melisa Ertan"
                        },
                        new
                        {
                            Id = new Guid("c0760813-3564-4ef6-9717-e58b6cbefe60"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "fc714ee9-6798-4c77-a2d6-1e90011a92f8",
                            Email = "armagan.yagci@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Armağan",
                            Gender = 2,
                            ImageUrl = "image21",
                            LastName = "Yağcı",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARMAGANYAGCI@GMAIL.COM",
                            NormalizedUserName = "ARMAGANYAGCI@GMAIL.COM",
                            PhoneNumber = "+905439999921",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "6f939787-eb60-4168-8122-2930276ed91b",
                            TwoFactorEnabled = false,
                            UserName = "Armağan Yağcı"
                        },
                        new
                        {
                            Id = new Guid("d88c8518-9dc8-4901-97c8-0b386a090862"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "b124ebc5-6f59-489f-b23f-f63ee176120e",
                            Email = "filiz.cetin.narsap@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Filiz",
                            Gender = 1,
                            ImageUrl = "image22",
                            LastName = "Çetin Narşap",
                            LockoutEnabled = false,
                            NormalizedEmail = "FILIZCETINNARSAP@GMAIL.COM",
                            NormalizedUserName = "FILIZCETINNARSAP@GMAIL.COM",
                            PhoneNumber = "+905439999922",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c5b1af17-1a6d-4e63-8808-2935ef170917",
                            TwoFactorEnabled = false,
                            UserName = "Filiz Çetin Narşap"
                        },
                        new
                        {
                            Id = new Guid("e079e4f6-0d09-41c2-abf4-843930bf97f4"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "e7c699be-cda4-478d-a043-e7ee1f894855",
                            Email = "hande.eren@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hande",
                            Gender = 1,
                            ImageUrl = "image23",
                            LastName = "Eren",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANDEREN@GMAIL.COM",
                            NormalizedUserName = "HANDEREN@GMAIL.COM",
                            PhoneNumber = "+905439999923",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "cb3b2284-76db-495e-9133-3acf88e64502",
                            TwoFactorEnabled = false,
                            UserName = "Hande Eren"
                        },
                        new
                        {
                            Id = new Guid("bdbb92b8-b209-474b-a7bf-ecdc97c6af1f"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "9f914d3f-9184-4b90-843f-aee132095007",
                            Email = "nergis.aktas@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image24",
                            LastName = "Aktaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGISAKTAS@GMAIL.COM",
                            NormalizedUserName = "NERGISAKTAS@GMAIL.COM",
                            PhoneNumber = "+905439999924",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "d1f0ec5d-bcb9-42fa-8491-425142373be7",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Aktaş"
                        },
                        new
                        {
                            Id = new Guid("38aadb5e-ae48-4767-860c-fc588ebe9cbf"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "0d48f187-8197-46b7-975d-362404faef1c",
                            Email = "gunsu.berber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Günsu",
                            Gender = 1,
                            ImageUrl = "image25",
                            LastName = "Berber",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUNSUBERBER@GMAIL.COM",
                            NormalizedUserName = "GUNSUBERBER@GMAIL.COM",
                            PhoneNumber = "+905439999925",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "3416458e-74c2-4089-83d2-17dad7fa7481",
                            TwoFactorEnabled = false,
                            UserName = "Günsu Berber"
                        },
                        new
                        {
                            Id = new Guid("d0038ff3-5561-4cc6-b52a-3ecc63473559"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "354f1c57-a12c-49a6-986d-ff2ff3180487",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image26",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEOZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEOZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999926",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "56025c75-b619-4f6c-9e43-0e8a926d7758",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("bc550a9d-ba43-4f0f-ad63-e98af815f60b"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "51df646b-4992-4cce-926c-7b786e315056",
                            Email = "yasemin.kocaman@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Yasemin",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Kocaman",
                            LockoutEnabled = false,
                            NormalizedEmail = "YASEMINKOCAMAN@GMAIL.COM",
                            NormalizedUserName = "YASEMINKOCAMAN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ecb92b47-2aa2-420a-b28b-9cd8430b3cc6",
                            TwoFactorEnabled = false,
                            UserName = "Yasemin Kocaman"
                        },
                        new
                        {
                            Id = new Guid("8ea6301f-beab-4d38-bbc4-fd7ae6f9ade9"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "054b2584-8cbd-4d7a-9aef-047972b7b081",
                            Email = "aysenur.cetin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ayşe Nur",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Çetin",
                            LockoutEnabled = false,
                            NormalizedEmail = "AYSENURCETIN@GMAIL.COM",
                            NormalizedUserName = "AYSENURCETIN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "922e3145-d0dd-4812-8d45-510245b61499",
                            TwoFactorEnabled = false,
                            UserName = "Ayşe Nur Çetin"
                        },
                        new
                        {
                            Id = new Guid("c5270761-cdb3-4602-8370-23c0233c65aa"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "87d17ef4-7c37-4a18-bbb7-72ee397e4bf4",
                            Email = "seyda.muftuoglu@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şeyda",
                            Gender = 1,
                            ImageUrl = "image29",
                            LastName = "Müftüoğlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEYDAMUFTUOGLU@GMAIL.COM",
                            NormalizedUserName = "SEYDAMUFTUOGLU@GMAIL.COM",
                            PhoneNumber = "+905439999929",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "aae857e4-59c1-45c9-81e4-60f1cfcb6370",
                            TwoFactorEnabled = false,
                            UserName = "Şeyda Müftüoğlu"
                        },
                        new
                        {
                            Id = new Guid("c82cf8c0-0c18-4659-98b7-a7e059a6e441"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "db952bc7-2d6e-42c8-ac8f-df1c2f87ea83",
                            Email = "goksu.gokcesu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Göksu",
                            Gender = 1,
                            ImageUrl = "image30",
                            LastName = "Gökçesu",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKSUGOKCESU@GMAIL.COM",
                            NormalizedUserName = "GOKSUGOKCESU@GMAIL.COM",
                            PhoneNumber = "+905439999930",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "517d6402-b931-4128-97af-235a31a142a4",
                            TwoFactorEnabled = false,
                            UserName = "Göksu Gökçesu"
                        },
                        new
                        {
                            Id = new Guid("38f0a05c-47a7-42f7-b164-252b0113a1d7"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "00b516df-384a-4e00-b5ce-67d3bf95bd98",
                            Email = "sevval.vural@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şevval",
                            Gender = 1,
                            ImageUrl = "image31",
                            LastName = "Vural",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEVVALVURAL@GMAIL.COM",
                            NormalizedUserName = "SEVVALVURAL@GMAIL.COM",
                            PhoneNumber = "+905439999931",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ae29b0ee-0d61-4a2a-8a18-9df3b2aca8b7",
                            TwoFactorEnabled = false,
                            UserName = "Şevval Vural"
                        },
                        new
                        {
                            Id = new Guid("6b78a99d-08a8-4b51-8c19-f6d2ffeca8a2"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "dad5a302-db85-43b0-99ad-564d9ea911f4",
                            Email = "rabia.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Rabia",
                            Gender = 1,
                            ImageUrl = "image32",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "RABIACANIGUR@GMAIL.COM",
                            NormalizedUserName = "RABIACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999932",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c28e1547-a134-48d7-83ac-48520d245e38",
                            TwoFactorEnabled = false,
                            UserName = "Rabia Canıgür"
                        },
                        new
                        {
                            Id = new Guid("c4b121e3-a9b1-45b2-9e5c-de28c8384d3f"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "aa55da65-23fa-4766-9356-d67dab3b6644",
                            Email = "meltem.erkmen.kandil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Meltem",
                            Gender = 1,
                            ImageUrl = "image33",
                            LastName = "Erkmen Kandil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELTEMERKMENKANDIL@GMAIL.COM",
                            NormalizedUserName = "MELTEMERKMENKANDIL@GMAIL.COM",
                            PhoneNumber = "+905439999933",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "e5c89ca4-6afb-4cee-9bbe-cf7d17dbe165",
                            TwoFactorEnabled = false,
                            UserName = "Meltem Erkmen Kandil"
                        },
                        new
                        {
                            Id = new Guid("a71c8d7f-0e8b-4caf-bdb9-a3544aa29632"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "9e2a70bb-95d9-4526-916f-6ab611d0875f",
                            Email = "ahmet.deniz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmet",
                            Gender = 2,
                            ImageUrl = "image34",
                            LastName = "Deniz",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMETDENIZ@GMAIL.COM",
                            NormalizedUserName = "AHMETDENIZ@GMAIL.COM",
                            PhoneNumber = "+905439999934",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "79f8c7ef-e34a-4d38-ac58-1f2c8e3d59b0",
                            TwoFactorEnabled = false,
                            UserName = "Ahmet Deniz"
                        },
                        new
                        {
                            Id = new Guid("eb4de0de-0006-43d5-aae6-314297436220"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "ebe9eee6-5f96-4215-aa67-062735fa9abf",
                            Email = "muhsin.cetinkaya@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Muhsin",
                            Gender = 2,
                            ImageUrl = "image35",
                            LastName = "Çetinkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUHSINCETINKAYA@GMAIL.COM",
                            NormalizedUserName = "MUHSINCETINKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999935",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "df8e0510-b280-4260-a7d3-d31b144b07d0",
                            TwoFactorEnabled = false,
                            UserName = "Muhsin Çetinkaya"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb")
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadgeIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0299a520-25ca-49ec-9492-035ccf2ed5b8"),
                            BadgeIcon = "https://w7.pngwing.com/pngs/423/1004/png-transparent-medal-gold-winner-badge-achievement-reward-army-champion-awards-icon.png",
                            BadgeName = "Dilek Perisi",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 14, 19, 24, 24, DateTimeKind.Local).AddTicks(1135),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6296d6f2-052e-40fb-bf0b-72eb2ac34a6d"),
                            BadgeIcon = "https://static.vecteezy.com/system/resources/previews/014/606/031/original/golden-yellow-trophy-icon-for-the-winner-of-a-sports-event-png.png",
                            BadgeName = "Dilek Yıldızı",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 14, 19, 24, 24, DateTimeKind.Local).AddTicks(1175),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("820b74d4-c6f7-4823-a45e-6dbd41311212"),
                            BadgeIcon = "https://e7.pngegg.com/pngimages/1002/183/png-clipart-smiley-smiley-miscellaneous-smiley.png",
                            BadgeName = "Gülen Yüz",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 14, 19, 24, 24, DateTimeKind.Local).AddTicks(1182),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1328a6c8-9ebd-4b22-978a-453f0c31bbdf"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 11, 19, 24, 24, DateTimeKind.Utc).AddTicks(3021),
                            EventName = "Diğer Gönüllü Faaliyetleri",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1e7bc8e4-59a8-4f63-af21-c7697a727f64"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 11, 19, 24, 24, DateTimeKind.Utc).AddTicks(3025),
                            EventName = "Dilek Alma Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3c5b8e39-a8f8-4671-a573-2e1e5e8a6f85"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 30, 11, 19, 24, 24, DateTimeKind.Utc).AddTicks(3027),
                            EventName = "Dilek Gerçekleştirme Etkinliği",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserBadges")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId");

                    b.Navigation("AppUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Navigation("UserBadges");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
