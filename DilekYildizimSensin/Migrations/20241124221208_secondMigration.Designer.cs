// <auto-generated />
using System;
using DilekYildizimSensin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DilekYildizimSensin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241124221208_secondMigration")]
    partial class secondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e"),
                            ConcurrencyStamp = "915f81d2-38ae-4a78-8769-ba51df0a4e77",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4"),
                            ConcurrencyStamp = "c75d099b-417d-4f62-814b-0bb2ddd8c55f",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb"),
                            ConcurrencyStamp = "ce4ea321-0bf3-4718-9f52-e412bcd55c3c",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "0ca192aa-338a-480e-9b52-bfc9ea38a8ac",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/024/183/525/non_2x/avatar-of-a-man-portrait-of-a-young-guy-illustration-of-male-character-in-modern-color-style-vector.jpg",
                            LastName = "Bey",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFyt6Vzsyusi4aFf6JRpEcISr4/vS+VBRpzOEKv6rOd5HoZ0Aw2JZZ1boZhrXyE+mQ==",
                            PhoneNumber = "+905439999999",
                            PhoneNumberConfirmed = true,
                            Score = 520,
                            SecurityStamp = "a53040c8-95f7-4a5e-9fe8-c64b6c6c7f76",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "cd420649-71d4-41be-89d1-1bde9c3563ce",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = 2,
                            ImageUrl = "https://img.freepik.com/premium-photo/graphic-designer-digital-avatar-generative-ai_934475-9292.jpg",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENtp6ndqJb2E4snQ+MUSqZ718i+JusPwTBGpdt6EaIQEMe0T34Mv85AyQ2cNkLgdXg==",
                            PhoneNumber = "+905439999988",
                            PhoneNumberConfirmed = false,
                            Score = 123,
                            SecurityStamp = "4af8374c-64df-4976-a157-15e02b279bf6",
                            TwoFactorEnabled = false,
                            UserName = "umutyasar"
                        },
                        new
                        {
                            Id = new Guid("b6f3d02c-680a-46b9-93ac-b15d4b9751a3"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "4abd0937-56a7-4ed6-8e5e-9c64bb486a1f",
                            Email = "ruken.yavuz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ruken",
                            Gender = 1,
                            ImageUrl = "image1",
                            LastName = "Yavuz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUKENYAVUZ@GMAIL.COM",
                            NormalizedUserName = "RUKENYAVUZ@GMAIL.COM",
                            PhoneNumber = "+905439999901",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "e5ad0467-7ccc-4b35-8ded-edc1e9e6daf5",
                            TwoFactorEnabled = false,
                            UserName = "Ruken Yavuz"
                        },
                        new
                        {
                            Id = new Guid("7bcdfeac-76d5-45a9-9dff-6944cc89f5bc"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "a4620c2f-f18c-430b-adcb-bfd9dc9c331f",
                            Email = "cem.aksu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cem",
                            Gender = 2,
                            ImageUrl = "image2",
                            LastName = "Aksu",
                            LockoutEnabled = false,
                            NormalizedEmail = "CEMAKSU@GMAIL.COM",
                            NormalizedUserName = "CEMAKSU@GMAIL.COM",
                            PhoneNumber = "+905439999902",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "4fa41ed9-9e89-491b-a184-facb247d102f",
                            TwoFactorEnabled = false,
                            UserName = "Cem Aksu"
                        },
                        new
                        {
                            Id = new Guid("357b611d-ce13-48c4-a1dd-f60006787163"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "b373ada8-1e21-4aa4-b9df-6ff0e4314b30",
                            Email = "irem.keles@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İrem",
                            Gender = 1,
                            ImageUrl = "image3",
                            LastName = "Keleş",
                            LockoutEnabled = false,
                            NormalizedEmail = "IREMKELES@GMAIL.COM",
                            NormalizedUserName = "IREMKELES@GMAIL.COM",
                            PhoneNumber = "+905439999903",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "d807ee8e-66ee-45f3-b794-2977d0024c18",
                            TwoFactorEnabled = false,
                            UserName = "İrem Keleş"
                        },
                        new
                        {
                            Id = new Guid("422c91b1-beee-4662-ac44-282de1ad1e97"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "8c9c5989-177a-4942-b047-16bb3a3caa0e",
                            Email = "hazal.serkaya@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hazal",
                            Gender = 1,
                            ImageUrl = "image4",
                            LastName = "Serkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "HAZALSERKAYA@GMAIL.COM",
                            NormalizedUserName = "HAZALSERKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999904",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "4e393efd-28d8-4397-ac6d-2e0e9b4049fb",
                            TwoFactorEnabled = false,
                            UserName = "Hazal Serkaya"
                        },
                        new
                        {
                            Id = new Guid("25ede081-58c1-4477-8f22-681fcd1b1307"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "44770d72-282e-4ab0-8b81-eeb61c058648",
                            Email = "zeynep.sena.celik@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zeynep Sena",
                            Gender = 1,
                            ImageUrl = "image5",
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZEYNEPSENACELIK@GMAIL.COM",
                            NormalizedUserName = "ZEYNEPSENACELIK@GMAIL.COM",
                            PhoneNumber = "+905439999905",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "dc3a490b-873e-41c1-a63b-798b625a30e8",
                            TwoFactorEnabled = false,
                            UserName = "Zeynep Sena Çelik"
                        },
                        new
                        {
                            Id = new Guid("1f8e1e91-dad7-4eb6-a55e-bb64de18df95"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "baaaf099-213f-41a8-bc03-b1b3cb57d46f",
                            Email = "ali.ozdemir@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 2,
                            ImageUrl = "image6",
                            LastName = "Özdemir",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALIÖZDEMIR@GMAIL.COM",
                            NormalizedUserName = "ALIÖZDEMIR@GMAIL.COM",
                            PhoneNumber = "+905439999906",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "37676ea0-65ba-4c54-8aa0-c1af0c2748e7",
                            TwoFactorEnabled = false,
                            UserName = "Ali Özdemir"
                        },
                        new
                        {
                            Id = new Guid("ec9c853a-9115-4368-b74f-8d64c86c9afe"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "3fe070a4-1f09-4fd8-b01d-0598da35eb41",
                            Email = "erhan.zorlu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Erhan",
                            Gender = 2,
                            ImageUrl = "image7",
                            LastName = "Zorlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERHANZORLU@GMAIL.COM",
                            NormalizedUserName = "ERHANZORLU@GMAIL.COM",
                            PhoneNumber = "+905439999907",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "1e18c400-9f65-460c-b5bb-dca81a7872bd",
                            TwoFactorEnabled = false,
                            UserName = "Erhan Zorlu"
                        },
                        new
                        {
                            Id = new Guid("42096dc2-3847-4489-967d-f029ad631262"),
                            AccessFailedCount = 0,
                            Age = 21,
                            ConcurrencyStamp = "cea4a72b-2d19-48e6-b525-132e1007b8b4",
                            Email = "yagmur.ay@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yağmur",
                            Gender = 1,
                            ImageUrl = "image8",
                            LastName = "Ay",
                            LockoutEnabled = false,
                            NormalizedEmail = "YAĞMURAY@GMAIL.COM",
                            NormalizedUserName = "YAĞMURAY@GMAIL.COM",
                            PhoneNumber = "+905439999908",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "76d32440-986a-4d3a-90a9-f7a52d76cd3c",
                            TwoFactorEnabled = false,
                            UserName = "Yağmur Ay"
                        },
                        new
                        {
                            Id = new Guid("bc48bbc4-ee0c-4cec-bab6-463a0adc9c88"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "500ec8e8-2998-4cd1-a0b7-de1f781cc04a",
                            Email = "nora.ipekci@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nora",
                            Gender = 1,
                            ImageUrl = "image9",
                            LastName = "İpekçi",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORAİPEKÇİ@GMAIL.COM",
                            NormalizedUserName = "NORAİPEKÇİ@GMAIL.COM",
                            PhoneNumber = "+905439999909",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c68e5af0-857f-4461-b145-d7b2a15407ae",
                            TwoFactorEnabled = false,
                            UserName = "Nora İpekçi"
                        },
                        new
                        {
                            Id = new Guid("8e2c5a2d-05f8-4bb6-8ad1-a0d697ec6c98"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "779ac6c6-0726-4d7d-906f-05eb16c534cc",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image10",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEÖZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEÖZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999910",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "ed87a450-ecf1-4942-a56f-4c4fe8efc0d6",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("0f5398aa-af2b-4573-be1a-d77d6fbe45d8"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "f513c7d0-ee90-4279-9ce8-9c57648e2b74",
                            Email = "alper.goksel.yilmaz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alper Göksel",
                            Gender = 2,
                            ImageUrl = "image11",
                            LastName = "Yılmaz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            NormalizedUserName = "ALPERGOKSELYILMAZ@GMAIL.COM",
                            PhoneNumber = "+905439999911",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "cdce47fd-0b94-44fe-8b72-b92579dc4478",
                            TwoFactorEnabled = false,
                            UserName = "Alper Göksel Yılmaz"
                        },
                        new
                        {
                            Id = new Guid("651185da-22ff-4f5b-b227-3193ae00dea5"),
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "5fbb5464-2688-40fe-8908-881b0adfa9af",
                            Email = "saliha.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Saliha",
                            Gender = 1,
                            ImageUrl = "image12",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "SALIHACANIGUR@GMAIL.COM",
                            NormalizedUserName = "SALIHACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999912",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "0697a347-b2b2-4dbc-97aa-6dbf28557148",
                            TwoFactorEnabled = false,
                            UserName = "Saliha Canıgür"
                        },
                        new
                        {
                            Id = new Guid("510943de-18a7-47f6-a6fd-8cef14173ba7"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "c5819f54-dcb4-4c47-aa0e-ac51a8743a55",
                            Email = "huseyin.adas@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hüseyin",
                            Gender = 2,
                            ImageUrl = "image13",
                            LastName = "Adaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUSEYINADAS@GMAIL.COM",
                            NormalizedUserName = "HUSEYINADAS@GMAIL.COM",
                            PhoneNumber = "+905439999913",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "6c11b4c2-0ed6-47f6-a48c-c66f1a1257e6",
                            TwoFactorEnabled = false,
                            UserName = "Hüseyin Adaş"
                        },
                        new
                        {
                            Id = new Guid("ce4dae12-f2e2-4bf5-b756-19063eb8ab00"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "3cc12dec-4c98-46c3-b9b2-736e3a6a1b5d",
                            Email = "ferit.erden@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ferit",
                            Gender = 2,
                            ImageUrl = "image14",
                            LastName = "Erden",
                            LockoutEnabled = false,
                            NormalizedEmail = "FERITERDEN@GMAIL.COM",
                            NormalizedUserName = "FERITERDEN@GMAIL.COM",
                            PhoneNumber = "+905439999914",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "45f09cb0-79f6-4027-a17c-cd3183f9be6f",
                            TwoFactorEnabled = false,
                            UserName = "Ferit Erden"
                        },
                        new
                        {
                            Id = new Guid("2464c9fd-c904-4eea-90b7-6ec1c5fdcdc1"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "a005c670-247c-4924-b527-b7c53d9ce2f5",
                            Email = "nergis@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image15",
                            LastName = "Gül",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGIS@GMAIL.COM",
                            NormalizedUserName = "NERGIS@GMAIL.COM",
                            PhoneNumber = "+905439999915",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "0e34b66a-b58e-4ea9-9a29-226da7a40170",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Gül"
                        },
                        new
                        {
                            Id = new Guid("f142e765-de2f-439e-8974-8d2302cbdc30"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "6dd84ffd-c87a-45bf-a0db-0109cb8102e3",
                            Email = "ilayda.celebi@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "İlayda",
                            Gender = 1,
                            ImageUrl = "image16",
                            LastName = "Çelebi",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILAYDACELEBI@GMAIL.COM",
                            NormalizedUserName = "ILAYDACELEBI@GMAIL.COM",
                            PhoneNumber = "+905439999916",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "828d7652-98c6-47ae-88e0-c02569af8a71",
                            TwoFactorEnabled = false,
                            UserName = "İlayda Çelebi"
                        },
                        new
                        {
                            Id = new Guid("65e6ee3e-d697-4eb5-8c38-ece9881bdfef"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "36264f5a-8616-4a66-8a0f-dfcc10720e07",
                            Email = "gokhan.sahin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gökhan",
                            Gender = 2,
                            ImageUrl = "image17",
                            LastName = "Şahin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKHANSHAHIN@GMAIL.COM",
                            NormalizedUserName = "GOKHANSHAHIN@GMAIL.COM",
                            PhoneNumber = "+905439999917",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "a5d9e5bc-d977-4796-a166-54f915998c0d",
                            TwoFactorEnabled = false,
                            UserName = "Gökhan Şahin"
                        },
                        new
                        {
                            Id = new Guid("544a8342-c23e-49f9-b89f-c9d60f9bc1a1"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "8ad41b74-ae5d-46c1-9a81-352deb1bda20",
                            Email = "ozge.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Özge",
                            Gender = 1,
                            ImageUrl = "image18",
                            LastName = "Akar",
                            LockoutEnabled = false,
                            NormalizedEmail = "OZGEAKAR@GMAIL.COM",
                            NormalizedUserName = "OZGEAKAR@GMAIL.COM",
                            PhoneNumber = "+905439999918",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "ce864e60-1fb3-4a70-afbc-c3509989fd36",
                            TwoFactorEnabled = false,
                            UserName = "Özge Akar"
                        },
                        new
                        {
                            Id = new Guid("cf785d0e-efa6-47ad-a31c-bfeaa698176f"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "0094971e-715c-4a4d-af7d-0b6edbdf52e8",
                            Email = "ipek.gurdamar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "İpek",
                            Gender = 1,
                            ImageUrl = "image19",
                            LastName = "Gürdamar",
                            LockoutEnabled = false,
                            NormalizedEmail = "IPEKGURDAMAR@GMAIL.COM",
                            NormalizedUserName = "IPEKGURDAMAR@GMAIL.COM",
                            PhoneNumber = "+905439999919",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "2be864dd-52a1-4734-96a2-50788b2970fd",
                            TwoFactorEnabled = false,
                            UserName = "İpek Gürdamar"
                        },
                        new
                        {
                            Id = new Guid("8c233372-ff08-425c-9c40-2529b8239a05"),
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "501fde2a-0ada-48f8-bd1b-16dc8b7f7618",
                            Email = "melisa.ertan@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melisa",
                            Gender = 1,
                            ImageUrl = "image20",
                            LastName = "Ertan",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELISAERTAN@GMAIL.COM",
                            NormalizedUserName = "MELISAERTAN@GMAIL.COM",
                            PhoneNumber = "+905439999920",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "c252f40b-8c02-4b5d-a9b4-5a32cc01fd68",
                            TwoFactorEnabled = false,
                            UserName = "Melisa Ertan"
                        },
                        new
                        {
                            Id = new Guid("a774727d-3ac6-4ced-a3a2-e18283bc0dca"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "cc768834-e86b-476a-a43f-1f7b705460ea",
                            Email = "armagan.yagci@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Armağan",
                            Gender = 2,
                            ImageUrl = "image21",
                            LastName = "Yağcı",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARMAGANYAGCI@GMAIL.COM",
                            NormalizedUserName = "ARMAGANYAGCI@GMAIL.COM",
                            PhoneNumber = "+905439999921",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "e923f68f-069c-4e9a-a635-5024e21bd185",
                            TwoFactorEnabled = false,
                            UserName = "Armağan Yağcı"
                        },
                        new
                        {
                            Id = new Guid("97f7abd3-abd6-48ab-838b-509849e3a917"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "2c8e28b2-b88c-4326-af06-2d65ce2b58bc",
                            Email = "filiz.cetin.narsap@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Filiz",
                            Gender = 1,
                            ImageUrl = "image22",
                            LastName = "Çetin Narşap",
                            LockoutEnabled = false,
                            NormalizedEmail = "FILIZCETINNARSAP@GMAIL.COM",
                            NormalizedUserName = "FILIZCETINNARSAP@GMAIL.COM",
                            PhoneNumber = "+905439999922",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "c905bc84-4bb8-49ce-92b1-4946d9e7e19a",
                            TwoFactorEnabled = false,
                            UserName = "Filiz Çetin Narşap"
                        },
                        new
                        {
                            Id = new Guid("8ca158c0-a0ba-4edf-8b16-1c7365aa9a23"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "aff9aea2-fad0-4248-95f9-4147ff2fb313",
                            Email = "hande.eren@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hande",
                            Gender = 1,
                            ImageUrl = "image23",
                            LastName = "Eren",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANDEREN@GMAIL.COM",
                            NormalizedUserName = "HANDEREN@GMAIL.COM",
                            PhoneNumber = "+905439999923",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "d5390c96-86f0-4650-893f-50b755d73ef7",
                            TwoFactorEnabled = false,
                            UserName = "Hande Eren"
                        },
                        new
                        {
                            Id = new Guid("8a5649cf-c6b6-4195-9d37-6feec34fc5ae"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "84e2b567-0d9d-4079-b27a-73b5c058d008",
                            Email = "nergis.aktas@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nergis",
                            Gender = 1,
                            ImageUrl = "image24",
                            LastName = "Aktaş",
                            LockoutEnabled = false,
                            NormalizedEmail = "NERGISAKTAS@GMAIL.COM",
                            NormalizedUserName = "NERGISAKTAS@GMAIL.COM",
                            PhoneNumber = "+905439999924",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "40511f40-56f7-4ae8-80b5-311f01204486",
                            TwoFactorEnabled = false,
                            UserName = "Nergis Aktaş"
                        },
                        new
                        {
                            Id = new Guid("eb2968d2-38da-4272-ac02-294ef4bb9bf0"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "76bf807e-68a2-4ec8-96d8-86cf6a7fed70",
                            Email = "gunsu.berber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Günsu",
                            Gender = 1,
                            ImageUrl = "image25",
                            LastName = "Berber",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUNSUBERBER@GMAIL.COM",
                            NormalizedUserName = "GUNSUBERBER@GMAIL.COM",
                            PhoneNumber = "+905439999925",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "d7d2ce1e-df20-4959-acf7-5a52c4d43c79",
                            TwoFactorEnabled = false,
                            UserName = "Günsu Berber"
                        },
                        new
                        {
                            Id = new Guid("3b44d85d-0174-424b-a450-cde9de8249b5"),
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "33124dc7-d09d-43f7-9dab-974219e973c6",
                            Email = "melike.ozdil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Melike",
                            Gender = 1,
                            ImageUrl = "image26",
                            LastName = "Özdil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELIKEOZDIL@GMAIL.COM",
                            NormalizedUserName = "MELIKEOZDIL@GMAIL.COM",
                            PhoneNumber = "+905439999926",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "55057f79-3d5b-44b4-831c-769694421ec7",
                            TwoFactorEnabled = false,
                            UserName = "Melike Özdil"
                        },
                        new
                        {
                            Id = new Guid("34c9949f-ccfb-4782-86c7-b56286b206f5"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "3ee02f7e-110a-4c21-ac76-031f1d0486d4",
                            Email = "yasemin.kocaman@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Yasemin",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Kocaman",
                            LockoutEnabled = false,
                            NormalizedEmail = "YASEMINKOCAMAN@GMAIL.COM",
                            NormalizedUserName = "YASEMINKOCAMAN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "5ce1f5b5-2eba-4a12-be34-92ab9ebc2154",
                            TwoFactorEnabled = false,
                            UserName = "Yasemin Kocaman"
                        },
                        new
                        {
                            Id = new Guid("0ffcc6d2-834d-42fd-912e-07c9ed8b2e54"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "4196c696-5e0e-445f-9ba0-76f33940f744",
                            Email = "aysenur.cetin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ayşe Nur",
                            Gender = 1,
                            ImageUrl = "image27",
                            LastName = "Çetin",
                            LockoutEnabled = false,
                            NormalizedEmail = "AYSENURCETIN@GMAIL.COM",
                            NormalizedUserName = "AYSENURCETIN@GMAIL.COM",
                            PhoneNumber = "+905439999927",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "39e54071-b924-4399-ab38-87dc1556b959",
                            TwoFactorEnabled = false,
                            UserName = "Ayşe Nur Çetin"
                        },
                        new
                        {
                            Id = new Guid("30d607e1-398d-4653-8dc1-e107d0644c27"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "bee6b136-ff41-4fc6-998e-01040ee615a3",
                            Email = "seyda.muftuoglu@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şeyda",
                            Gender = 1,
                            ImageUrl = "image29",
                            LastName = "Müftüoğlu",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEYDAMUFTUOGLU@GMAIL.COM",
                            NormalizedUserName = "SEYDAMUFTUOGLU@GMAIL.COM",
                            PhoneNumber = "+905439999929",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "96537a55-0b2a-4695-9b3e-a959b0d670cc",
                            TwoFactorEnabled = false,
                            UserName = "Şeyda Müftüoğlu"
                        },
                        new
                        {
                            Id = new Guid("0daf3b5c-c86c-4b8b-b271-83082e86a7d1"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "6485efe5-a575-4c90-9246-768429a576a6",
                            Email = "goksu.gokcesu@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Göksu",
                            Gender = 1,
                            ImageUrl = "image30",
                            LastName = "Gökçesu",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOKSUGOKCESU@GMAIL.COM",
                            NormalizedUserName = "GOKSUGOKCESU@GMAIL.COM",
                            PhoneNumber = "+905439999930",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "13575f2c-405a-464d-b47f-dc2c371eacd1",
                            TwoFactorEnabled = false,
                            UserName = "Göksu Gökçesu"
                        },
                        new
                        {
                            Id = new Guid("dd53ceec-f9ee-4ead-820e-a6ebe11d21b2"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "32bb8612-03b6-4975-99d0-0da91610e2a2",
                            Email = "sevval.vural@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Şevval",
                            Gender = 1,
                            ImageUrl = "image31",
                            LastName = "Vural",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEVVALVURAL@GMAIL.COM",
                            NormalizedUserName = "SEVVALVURAL@GMAIL.COM",
                            PhoneNumber = "+905439999931",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "cf39a31b-5515-420c-88cf-2416b1503e7b",
                            TwoFactorEnabled = false,
                            UserName = "Şevval Vural"
                        },
                        new
                        {
                            Id = new Guid("a6757771-5c0c-48ea-8b1e-d5c7c9042b0b"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "b7728678-a98c-44ef-bcf1-66564b648add",
                            Email = "rabia.canigur@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Rabia",
                            Gender = 1,
                            ImageUrl = "image32",
                            LastName = "Canıgür",
                            LockoutEnabled = false,
                            NormalizedEmail = "RABIACANIGUR@GMAIL.COM",
                            NormalizedUserName = "RABIACANIGUR@GMAIL.COM",
                            PhoneNumber = "+905439999932",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "caf61417-ecaa-4e2d-ba01-5840357ea572",
                            TwoFactorEnabled = false,
                            UserName = "Rabia Canıgür"
                        },
                        new
                        {
                            Id = new Guid("0a9e2bbc-b87b-4e03-86bc-903a8a16ee9e"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "9d717b54-8a5f-4a3b-b204-84fc08933722",
                            Email = "meltem.erkmen.kandil@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Meltem",
                            Gender = 1,
                            ImageUrl = "image33",
                            LastName = "Erkmen Kandil",
                            LockoutEnabled = false,
                            NormalizedEmail = "MELTEMERKMENKANDIL@GMAIL.COM",
                            NormalizedUserName = "MELTEMERKMENKANDIL@GMAIL.COM",
                            PhoneNumber = "+905439999933",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "c581c4c8-a4cd-4278-a774-d208e2e96741",
                            TwoFactorEnabled = false,
                            UserName = "Meltem Erkmen Kandil"
                        },
                        new
                        {
                            Id = new Guid("cf379f56-667c-4ced-9204-ee161b57b071"),
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "7f99f6c0-0200-4572-aa2d-450b4edb20cf",
                            Email = "ahmet.deniz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmet",
                            Gender = 2,
                            ImageUrl = "image34",
                            LastName = "Deniz",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMETDENIZ@GMAIL.COM",
                            NormalizedUserName = "AHMETDENIZ@GMAIL.COM",
                            PhoneNumber = "+905439999934",
                            PhoneNumberConfirmed = true,
                            Score = 0,
                            SecurityStamp = "2e90498e-c16c-471e-9c6f-089c676d3946",
                            TwoFactorEnabled = false,
                            UserName = "Ahmet Deniz"
                        },
                        new
                        {
                            Id = new Guid("eaa872b5-2093-4f37-8c72-c761249844fb"),
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "6f2d8caf-0b5a-4f9e-9502-976b52491147",
                            Email = "muhsin.cetinkaya@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Muhsin",
                            Gender = 2,
                            ImageUrl = "image35",
                            LastName = "Çetinkaya",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUHSINCETINKAYA@GMAIL.COM",
                            NormalizedUserName = "MUHSINCETINKAYA@GMAIL.COM",
                            PhoneNumber = "+905439999935",
                            PhoneNumberConfirmed = false,
                            Score = 0,
                            SecurityStamp = "2496c0fc-9907-4fba-b4e6-4fd2b3b5cc14",
                            TwoFactorEnabled = false,
                            UserName = "Muhsin Çetinkaya"
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f065c"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb")
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadgeIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0299a520-25ca-49ec-9492-035ccf2ed5b8"),
                            BadgeIcon = "https://w7.pngwing.com/pngs/423/1004/png-transparent-medal-gold-winner-badge-achievement-reward-army-champion-awards-icon.png",
                            BadgeName = "Dilek Perisi",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 12, 6, 653, DateTimeKind.Local).AddTicks(4240),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6296d6f2-052e-40fb-bf0b-72eb2ac34a6d"),
                            BadgeIcon = "https://static.vecteezy.com/system/resources/previews/014/606/031/original/golden-yellow-trophy-icon-for-the-winner-of-a-sports-event-png.png",
                            BadgeName = "Dilek Yıldızı",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 12, 6, 653, DateTimeKind.Local).AddTicks(4303),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("820b74d4-c6f7-4823-a45e-6dbd41311212"),
                            BadgeIcon = "https://e7.pngegg.com/pngimages/1002/183/png-clipart-smiley-smiley-miscellaneous-smiley.png",
                            BadgeName = "Gülen Yüz",
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 25, 1, 12, 6, 653, DateTimeKind.Local).AddTicks(4310),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1328a6c8-9ebd-4b22-978a-453f0c31bbdf"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 12, 6, 653, DateTimeKind.Utc).AddTicks(5850),
                            EventName = "Diğer Gönüllü Faaliyetleri",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1e7bc8e4-59a8-4f63-af21-c7697a727f64"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 12, 6, 653, DateTimeKind.Utc).AddTicks(5854),
                            EventName = "Dilek Alma Etkinliği",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3c5b8e39-a8f8-4671-a573-2e1e5e8a6f85"),
                            CreatedBy = "Undefined",
                            CreatedDate = new DateTime(2024, 11, 24, 22, 12, 6, 653, DateTimeKind.Utc).AddTicks(5857),
                            EventName = "Dilek Gerçekleştirme Etkinliği",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.VolunteerScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("VolunteerScores");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppRoleClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserClaim", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserLogin", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserRole", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUserToken", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserBadge", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserBadges")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.UserEvent", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DilekYildizimSensin.Models.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.VolunteerScore", b =>
                {
                    b.HasOne("DilekYildizimSensin.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.AppUser", b =>
                {
                    b.Navigation("UserBadges");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("DilekYildizimSensin.Models.Event", b =>
                {
                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
